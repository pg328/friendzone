{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, memo } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Flag } from \"./Flag\";\nimport { useContext } from \"./CountryContext\";\nimport { CountryText } from \"./CountryText\";\nimport { useTheme } from \"./CountryTheme\";\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start'\n  },\n  containerWithEmoji: {\n    marginTop: 0\n  },\n  containerWithoutEmoji: {\n    marginTop: 5\n  },\n  flagWithSomethingContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'center'\n  },\n  something: {\n    fontSize: 16\n  }\n});\nvar FlagText = function FlagText(props) {\n  return React.createElement(CountryText, Object.assign({}, props, {\n    style: styles.something\n  }));\n};\nvar FlagWithSomething = memo(function (_ref) {\n  var countryCode = _ref.countryCode,\n    withEmoji = _ref.withEmoji,\n    withCountryNameButton = _ref.withCountryNameButton,\n    withCurrencyButton = _ref.withCurrencyButton,\n    withCallingCodeButton = _ref.withCallingCodeButton,\n    withFlagButton = _ref.withFlagButton,\n    flagSize = _ref.flagSize,\n    placeholder = _ref.placeholder;\n  var _useContext = useContext(),\n    translation = _useContext.translation,\n    getCountryInfoAsync = _useContext.getCountryInfoAsync;\n  var _useState = useState({\n      countryName: '',\n      currency: '',\n      callingCode: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  var countryName = state.countryName,\n    currency = state.currency,\n    callingCode = state.callingCode;\n  useEffect(function () {\n    if (countryCode) {\n      getCountryInfoAsync({\n        countryCode: countryCode,\n        translation: translation\n      }).then(setState).catch(console.warn);\n    }\n  }, [countryCode, withCountryNameButton, withCurrencyButton, withCallingCodeButton]);\n  return React.createElement(View, {\n    style: styles.flagWithSomethingContainer\n  }, countryCode ? React.createElement(Flag, Object.assign({}, {\n    withEmoji: withEmoji,\n    countryCode: countryCode,\n    withFlagButton: withFlagButton,\n    flagSize: flagSize\n  })) : React.createElement(FlagText, null, placeholder), withCountryNameButton && countryName ? React.createElement(FlagText, null, countryName + ' ') : null, withCurrencyButton && currency ? React.createElement(FlagText, null, \"(\" + currency + \") \") : null, withCallingCodeButton && callingCode ? React.createElement(FlagText, null, \"+\" + callingCode) : null);\n});\nexport var FlagButton = function FlagButton(_ref2) {\n  var withEmoji = _ref2.withEmoji,\n    withCountryNameButton = _ref2.withCountryNameButton,\n    withCallingCodeButton = _ref2.withCallingCodeButton,\n    withCurrencyButton = _ref2.withCurrencyButton,\n    withFlagButton = _ref2.withFlagButton,\n    countryCode = _ref2.countryCode,\n    containerButtonStyle = _ref2.containerButtonStyle,\n    onOpen = _ref2.onOpen,\n    placeholder = _ref2.placeholder;\n  var _useTheme = useTheme(),\n    flagSize = _useTheme.flagSizeButton;\n  return React.createElement(TouchableOpacity, {\n    activeOpacity: 0.7,\n    onPress: onOpen\n  }, React.createElement(View, {\n    style: [styles.container, withEmoji ? styles.containerWithEmoji : styles.containerWithoutEmoji, containerButtonStyle]\n  }, React.createElement(FlagWithSomething, Object.assign({}, {\n    countryCode: countryCode,\n    withEmoji: withEmoji,\n    withCountryNameButton: withCountryNameButton,\n    withCallingCodeButton: withCallingCodeButton,\n    withCurrencyButton: withCurrencyButton,\n    withFlagButton: withFlagButton,\n    flagSize: flagSize,\n    placeholder: placeholder\n  }))));\n};\nFlagButton.defaultProps = {\n  withEmoji: true,\n  withCountryNameButton: false,\n  withCallingCodeButton: false,\n  withCurrencyButton: false,\n  withFlagButton: true\n};","map":{"version":3,"sources":["../src/FlagButton.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,IAAI,QAAQ,EAAE,SAAS,EAAa,IAAI,QAAQ,OAAO;AAAA,OAAA,gBAAA;AAAA,OAAA,UAAA;AAAA,OAAA,IAAA;AAUnE,SAAS,IAAI;AACb,SAAS,UAAU;AACnB,SAAS,WAAW;AACpB,SAAS,QAAQ;AAEjB,IAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;EAC/B,SAAS,EAAE;IACT,UAAU,EAAE,YAAY;IACxB,cAAc,EAAE;GACjB;EACD,kBAAkB,EAAE;IAClB,SAAS,EAAE;GACZ;EACD,qBAAqB,EAAE;IACrB,SAAS,EAAE;GACZ;EACD,0BAA0B,EAAE;IAC1B,aAAa,EAAE,KAAK;IACpB,QAAQ,EAAE,MAAM;IAChB,UAAU,EAAE;GACb;EACD,SAAS,EAAE;IAAE,QAAQ,EAAE;EAAE;CAC1B,CAAC;AAaF,IAAM,QAAQ,GAAG,SAAX,QAAQ,CAAI,KAA0C;EAAA,OAC1D,KAAA,CAAA,aAAA,CAAC,WAAW,EAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAK,KAAK,EAAA;IAAE,KAAK,EAAE,MAAM,CAAC;EAAS,CAAA,CAAA,CAAI;AAAA,CACpD;AAED,IAAM,iBAAiB,GAAG,IAAI,CAC5B,UAAA,IAAA,EAS4B;EAAA,IAR1B,WAAW,GAAA,IAAA,CAAX,WAAW;IACX,SAAS,GAAA,IAAA,CAAT,SAAS;IACT,qBAAqB,GAAA,IAAA,CAArB,qBAAqB;IACrB,kBAAkB,GAAA,IAAA,CAAlB,kBAAkB;IAClB,qBAAqB,GAAA,IAAA,CAArB,qBAAqB;IACrB,cAAc,GAAA,IAAA,CAAd,cAAc;IACd,QAAQ,GAAA,IAAA,CAAR,QAAQ;IACR,WAAW,GAAA,IAAA,CAAX,WAAW;EAEX,IAAA,WAAA,GAA6C,UAAU,EAAE;IAAjD,WAAW,GAAA,WAAA,CAAX,WAAW;IAAE,mBAAmB,GAAA,WAAA,CAAnB,mBAAmB;EACxC,IAAA,SAAA,GAA0B,QAAQ,CAAC;MACjC,WAAW,EAAE,EAAE;MACf,QAAQ,EAAE,EAAE;MACZ,WAAW,EAAE;KACd,CAAC;IAAA,UAAA,GAAA,cAAA,CAAA,SAAA;IAJK,KAAK,GAAA,UAAA;IAAE,QAAQ,GAAA,UAAA;EAKtB,IAAQ,WAAW,GAA4B,KAAK,CAA5C,WAAW;IAAE,QAAQ,GAAkB,KAAK,CAA/B,QAAQ;IAAE,WAAW,GAAK,KAAK,CAArB,WAAW;EAC1C,SAAS,CAAC,YAAK;IACb,IAAI,WAAW,EAAE;MACf,mBAAmB,CAAC;QAAE,WAAW,EAAX,WAAW;QAAE,WAAW,EAAX;MAAW,CAAE,CAAC,CAC9C,IAAI,CAAC,QAAQ,CAAC,CACd,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;IACvB;EACH,CAAC,EAAE,CACD,WAAW,EACX,qBAAqB,EACrB,kBAAkB,EAClB,qBAAqB,CACtB,CAAC;EAEF,OACE,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA;IAAC,KAAK,EAAE,MAAM,CAAC;EAA0B,CAAA,EAC3C,WAAW,GACV,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EACC;IAAE,SAAS,EAAT,SAAS;IAAE,WAAW,EAAX,WAAW;IAAE,cAAc,EAAd,cAAc;IAAE,QAAQ,EAAE;EAAS,CAAE,CAAA,CACnE,GAEF,KAAA,CAAA,aAAA,CAAC,QAAQ,EAAA,IAAA,EAAE,WAAW,CACvB,EAEA,qBAAqB,IAAI,WAAW,GACnC,KAAA,CAAA,aAAA,CAAC,QAAQ,EAAA,IAAA,EAAE,WAAW,GAAG,GAAG,CAAY,GACtC,IAAI,EACP,kBAAkB,IAAI,QAAQ,GAC7B,KAAA,CAAA,aAAA,CAAC,QAAQ,EAAA,IAAA,QAAM,QAAQ,QAAgB,GACrC,IAAI,EACP,qBAAqB,IAAI,WAAW,GACnC,KAAA,CAAA,aAAA,CAAC,QAAQ,EAAA,IAAA,QAAM,WAAW,CAAc,GACtC,IAAI,CACH;AAEX,CAAC,CACF;AAcD,OAAO,IAAM,UAAU,GAAG,SAAb,UAAU,CAAA,KAAA,EAUD;EAAA,IATpB,SAAS,GAAA,KAAA,CAAT,SAAS;IACT,qBAAqB,GAAA,KAAA,CAArB,qBAAqB;IACrB,qBAAqB,GAAA,KAAA,CAArB,qBAAqB;IACrB,kBAAkB,GAAA,KAAA,CAAlB,kBAAkB;IAClB,cAAc,GAAA,KAAA,CAAd,cAAc;IACd,WAAW,GAAA,KAAA,CAAX,WAAW;IACX,oBAAoB,GAAA,KAAA,CAApB,oBAAoB;IACpB,MAAM,GAAA,KAAA,CAAN,MAAM;IACN,WAAW,GAAA,KAAA,CAAX,WAAW;EAEX,IAAA,SAAA,GAAqC,QAAQ,EAAE;IAAvB,QAAQ,GAAA,SAAA,CAAxB,cAAc;EACtB,OACE,KAAA,CAAA,aAAA,CAAC,gBAAgB,EAAA;IAAC,aAAa,EAAE,GAAG;IAAE,OAAO,EAAE;EAAM,CAAA,EACnD,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA;IACH,KAAK,EAAE,CACL,MAAM,CAAC,SAAS,EAChB,SAAS,GAAG,MAAM,CAAC,kBAAkB,GAAG,MAAM,CAAC,qBAAqB,EACpE,oBAAoB;EACrB,CAAA,EAED,KAAA,CAAA,aAAA,CAAC,iBAAiB,EAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EACZ;IACF,WAAW,EAAX,WAAW;IACX,SAAS,EAAT,SAAS;IACT,qBAAqB,EAArB,qBAAqB;IACrB,qBAAqB,EAArB,qBAAqB;IACrB,kBAAkB,EAAlB,kBAAkB;IAClB,cAAc,EAAd,cAAc;IACd,QAAQ,EAAE,QAAS;IACnB,WAAW,EAAX;GACD,CAAA,CACD,CACG,CACU;AAEvB,CAAC;AAED,UAAU,CAAC,YAAY,GAAG;EACxB,SAAS,EAAE,IAAI;EACf,qBAAqB,EAAE,KAAK;EAC5B,qBAAqB,EAAE,KAAK;EAC5B,kBAAkB,EAAE,KAAK;EACzB,cAAc,EAAE;CACjB","sourceRoot":"","sourcesContent":["import React, { useState, useEffect, memo } from 'react';\nimport { TouchableOpacity, StyleSheet, View, } from 'react-native';\nimport { Flag } from './Flag';\nimport { useContext } from './CountryContext';\nimport { CountryText } from './CountryText';\nimport { useTheme } from './CountryTheme';\nconst styles = StyleSheet.create({\n    container: {\n        alignItems: 'flex-start',\n        justifyContent: 'flex-start',\n    },\n    containerWithEmoji: {\n        marginTop: 0,\n    },\n    containerWithoutEmoji: {\n        marginTop: 5,\n    },\n    flagWithSomethingContainer: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        alignItems: 'center',\n    },\n    something: { fontSize: 16 },\n});\nconst FlagText = (props) => (React.createElement(CountryText, Object.assign({}, props, { style: styles.something })));\nconst FlagWithSomething = memo(({ countryCode, withEmoji, withCountryNameButton, withCurrencyButton, withCallingCodeButton, withFlagButton, flagSize, placeholder, }) => {\n    const { translation, getCountryInfoAsync } = useContext();\n    const [state, setState] = useState({\n        countryName: '',\n        currency: '',\n        callingCode: '',\n    });\n    const { countryName, currency, callingCode } = state;\n    useEffect(() => {\n        if (countryCode) {\n            getCountryInfoAsync({ countryCode, translation })\n                .then(setState)\n                .catch(console.warn);\n        }\n    }, [\n        countryCode,\n        withCountryNameButton,\n        withCurrencyButton,\n        withCallingCodeButton,\n    ]);\n    return (React.createElement(View, { style: styles.flagWithSomethingContainer },\n        countryCode ? (React.createElement(Flag, Object.assign({}, { withEmoji, countryCode, withFlagButton, flagSize: flagSize }))) : (React.createElement(FlagText, null, placeholder)),\n        withCountryNameButton && countryName ? (React.createElement(FlagText, null, countryName + ' ')) : null,\n        withCurrencyButton && currency ? (React.createElement(FlagText, null, `(${currency}) `)) : null,\n        withCallingCodeButton && callingCode ? (React.createElement(FlagText, null, `+${callingCode}`)) : null));\n});\nexport const FlagButton = ({ withEmoji, withCountryNameButton, withCallingCodeButton, withCurrencyButton, withFlagButton, countryCode, containerButtonStyle, onOpen, placeholder, }) => {\n    const { flagSizeButton: flagSize } = useTheme();\n    return (React.createElement(TouchableOpacity, { activeOpacity: 0.7, onPress: onOpen },\n        React.createElement(View, { style: [\n                styles.container,\n                withEmoji ? styles.containerWithEmoji : styles.containerWithoutEmoji,\n                containerButtonStyle,\n            ] },\n            React.createElement(FlagWithSomething, Object.assign({}, {\n                countryCode,\n                withEmoji,\n                withCountryNameButton,\n                withCallingCodeButton,\n                withCurrencyButton,\n                withFlagButton,\n                flagSize: flagSize,\n                placeholder,\n            })))));\n};\nFlagButton.defaultProps = {\n    withEmoji: true,\n    withCountryNameButton: false,\n    withCallingCodeButton: false,\n    withCurrencyButton: false,\n    withFlagButton: true,\n};\n//# sourceMappingURL=FlagButton.js.map"]},"metadata":{},"sourceType":"module"}