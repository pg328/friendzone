{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useRef, memo, useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useTheme } from \"./CountryTheme\";\nimport { Flag } from \"./Flag\";\nimport { useContext } from \"./CountryContext\";\nimport { CountryText } from \"./CountryText\";\nvar borderBottomWidth = 2 / PixelRatio.get();\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  letters: {\n    marginRight: 10,\n    backgroundColor: 'transparent',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  letter: {\n    height: 23,\n    width: 20,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  letterText: {\n    textAlign: 'center'\n  },\n  itemCountry: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    paddingHorizontal: 5\n  },\n  itemCountryName: {\n    width: '90%'\n  },\n  list: {\n    flex: 1\n  },\n  sep: {\n    borderBottomWidth: borderBottomWidth,\n    width: '100%'\n  }\n});\nvar Letter = function Letter(_ref) {\n  var letter = _ref.letter,\n    scrollTo = _ref.scrollTo;\n  var _useTheme = useTheme(),\n    fontSize = _useTheme.fontSize,\n    activeOpacity = _useTheme.activeOpacity;\n  return React.createElement(TouchableOpacity, Object.assign({\n    testID: \"letter-\" + letter,\n    key: letter,\n    onPress: function onPress() {\n      return scrollTo(letter);\n    }\n  }, {\n    activeOpacity: activeOpacity\n  }), React.createElement(View, {\n    style: styles.letter\n  }, React.createElement(CountryText, {\n    style: [styles.letterText, {\n      fontSize: fontSize * 0.8\n    }],\n    allowFontScaling: false\n  }, letter)));\n};\nvar CountryItem = function CountryItem(props) {\n  var _useTheme2 = useTheme(),\n    activeOpacity = _useTheme2.activeOpacity,\n    itemHeight = _useTheme2.itemHeight,\n    flagSize = _useTheme2.flagSize;\n  var country = props.country,\n    onSelect = props.onSelect,\n    withFlag = props.withFlag,\n    withEmoji = props.withEmoji,\n    withCallingCode = props.withCallingCode,\n    withCurrency = props.withCurrency;\n  var extraContent = [];\n  if (withCallingCode && country.callingCode && country.callingCode.length > 0) {\n    extraContent.push(\"+\" + country.callingCode.join('|'));\n  }\n  if (withCurrency && country.currency && country.currency.length > 0) {\n    extraContent.push(country.currency.join('|'));\n  }\n  return React.createElement(TouchableOpacity, Object.assign({\n    key: country.cca2,\n    testID: \"country-selector-\" + country.cca2,\n    onPress: function onPress() {\n      return onSelect(country);\n    }\n  }, {\n    activeOpacity: activeOpacity\n  }), React.createElement(View, {\n    style: [styles.itemCountry, {\n      height: itemHeight\n    }]\n  }, withFlag && React.createElement(Flag, Object.assign({}, {\n    withEmoji: withEmoji,\n    countryCode: country.cca2,\n    flagSize: flagSize\n  })), React.createElement(View, {\n    style: styles.itemCountryName\n  }, React.createElement(CountryText, {\n    allowFontScaling: false,\n    numberOfLines: 2,\n    ellipsizeMode: 'tail'\n  }, country.name, extraContent.length > 0 && \" (\" + extraContent.join(', ') + \")\"))));\n};\nCountryItem.defaultProps = {\n  withFlag: true,\n  withCallingCode: false\n};\nvar MemoCountryItem = memo(CountryItem);\nvar renderItem = function renderItem(props) {\n  return function (_ref2) {\n    var country = _ref2.item;\n    return React.createElement(MemoCountryItem, Object.assign({}, _objectSpread({\n      country: country\n    }, props)));\n  };\n};\nvar keyExtractor = function keyExtractor(item) {\n  return item.cca2;\n};\nvar ItemSeparatorComponent = function ItemSeparatorComponent() {\n  var _useTheme3 = useTheme(),\n    primaryColorVariant = _useTheme3.primaryColorVariant;\n  return React.createElement(View, {\n    style: [styles.sep, {\n      borderBottomColor: primaryColorVariant\n    }]\n  });\n};\nvar _Dimensions$get = Dimensions.get('window'),\n  height = _Dimensions$get.height;\nexport var CountryList = function CountryList(props) {\n  var data = props.data,\n    withAlphaFilter = props.withAlphaFilter,\n    withEmoji = props.withEmoji,\n    withFlag = props.withFlag,\n    withCallingCode = props.withCallingCode,\n    withCurrency = props.withCurrency,\n    onSelect = props.onSelect,\n    filter = props.filter,\n    flatListProps = props.flatListProps,\n    filterFocus = props.filterFocus;\n  var flatListRef = useRef(null);\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    letter = _useState2[0],\n    setLetter = _useState2[1];\n  var _useTheme4 = useTheme(),\n    itemHeight = _useTheme4.itemHeight,\n    backgroundColor = _useTheme4.backgroundColor;\n  var indexLetter = data.map(function (country) {\n    return country.name.substr(0, 1);\n  }).join('');\n  var scrollTo = function scrollTo(letter) {\n    var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var index = indexLetter.indexOf(letter);\n    setLetter(letter);\n    if (flatListRef.current) {\n      flatListRef.current.scrollToIndex({\n        animated: animated,\n        index: index\n      });\n    }\n  };\n  var onScrollToIndexFailed = function onScrollToIndexFailed(_info) {\n    if (flatListRef.current) {\n      flatListRef.current.scrollToEnd();\n      scrollTo(letter);\n    }\n  };\n  var _useContext = useContext(),\n    search = _useContext.search,\n    getLetters = _useContext.getLetters;\n  var letters = getLetters(data);\n  useEffect(function () {\n    if (data && data.length > 0 && filterFocus && !filter) {\n      scrollTo(letters[0], false);\n    }\n  }, [filterFocus]);\n  var initialNumToRender = Math.round(height / (itemHeight || 1));\n  return React.createElement(View, {\n    style: [styles.container, {\n      backgroundColor: backgroundColor\n    }]\n  }, React.createElement(FlatList, Object.assign({\n    onScrollToIndexFailed: true,\n    ref: flatListRef,\n    testID: 'list-countries',\n    keyboardShouldPersistTaps: 'handled',\n    automaticallyAdjustContentInsets: false,\n    scrollEventThrottle: 1,\n    getItemLayout: function getItemLayout(_data, index) {\n      return {\n        length: itemHeight + borderBottomWidth,\n        offset: (itemHeight + borderBottomWidth) * index,\n        index: index\n      };\n    },\n    renderItem: renderItem({\n      withEmoji: withEmoji,\n      withFlag: withFlag,\n      withCallingCode: withCallingCode,\n      withCurrency: withCurrency,\n      onSelect: onSelect\n    })\n  }, {\n    data: search(filter, data),\n    keyExtractor: keyExtractor,\n    onScrollToIndexFailed: onScrollToIndexFailed,\n    ItemSeparatorComponent: ItemSeparatorComponent,\n    initialNumToRender: initialNumToRender\n  }, flatListProps)), withAlphaFilter && React.createElement(ScrollView, {\n    contentContainerStyle: styles.letters,\n    keyboardShouldPersistTaps: 'always'\n  }, letters.map(function (letter) {\n    return React.createElement(Letter, Object.assign({\n      key: letter\n    }, {\n      letter: letter,\n      scrollTo: scrollTo\n    }));\n  })));\n};\nCountryList.defaultProps = {\n  filterFocus: undefined\n};","map":{"version":3,"sources":["../src/CountryList.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React, { useRef, memo, useState, useEffect } from 'react';\nimport { StyleSheet, View, FlatList, ScrollView, TouchableOpacity, PixelRatio, Dimensions, } from 'react-native';\nimport { useTheme } from './CountryTheme';\nimport { Flag } from './Flag';\nimport { useContext } from './CountryContext';\nimport { CountryText } from './CountryText';\nconst borderBottomWidth = 2 / PixelRatio.get();\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    letters: {\n        marginRight: 10,\n        backgroundColor: 'transparent',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    letter: {\n        height: 23,\n        width: 20,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    letterText: {\n        textAlign: 'center',\n    },\n    itemCountry: {\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        paddingHorizontal: 5,\n    },\n    itemCountryName: {\n        width: '90%',\n    },\n    list: {\n        flex: 1,\n    },\n    sep: {\n        borderBottomWidth,\n        width: '100%',\n    },\n});\nconst Letter = ({ letter, scrollTo }) => {\n    const { fontSize, activeOpacity } = useTheme();\n    return (React.createElement(TouchableOpacity, Object.assign({ testID: `letter-${letter}`, key: letter, onPress: () => scrollTo(letter) }, { activeOpacity }),\n        React.createElement(View, { style: styles.letter },\n            React.createElement(CountryText, { style: [styles.letterText, { fontSize: fontSize * 0.8 }], allowFontScaling: false }, letter))));\n};\nconst CountryItem = (props) => {\n    const { activeOpacity, itemHeight, flagSize } = useTheme();\n    const { country, onSelect, withFlag, withEmoji, withCallingCode, withCurrency, } = props;\n    const extraContent = [];\n    if (withCallingCode &&\n        country.callingCode &&\n        country.callingCode.length > 0) {\n        extraContent.push(`+${country.callingCode.join('|')}`);\n    }\n    if (withCurrency && country.currency && country.currency.length > 0) {\n        extraContent.push(country.currency.join('|'));\n    }\n    return (React.createElement(TouchableOpacity, Object.assign({ key: country.cca2, testID: `country-selector-${country.cca2}`, onPress: () => onSelect(country) }, { activeOpacity }),\n        React.createElement(View, { style: [styles.itemCountry, { height: itemHeight }] },\n            withFlag && (React.createElement(Flag, Object.assign({}, { withEmoji, countryCode: country.cca2, flagSize: flagSize }))),\n            React.createElement(View, { style: styles.itemCountryName },\n                React.createElement(CountryText, { allowFontScaling: false, numberOfLines: 2, ellipsizeMode: 'tail' },\n                    country.name,\n                    extraContent.length > 0 && ` (${extraContent.join(', ')})`)))));\n};\nCountryItem.defaultProps = {\n    withFlag: true,\n    withCallingCode: false,\n};\nconst MemoCountryItem = memo(CountryItem);\nconst renderItem = (props) => ({ item: country, }) => (React.createElement(MemoCountryItem, Object.assign({}, { country, ...props })));\nconst keyExtractor = (item) => item.cca2;\nconst ItemSeparatorComponent = () => {\n    const { primaryColorVariant } = useTheme();\n    return (React.createElement(View, { style: [styles.sep, { borderBottomColor: primaryColorVariant }] }));\n};\nconst { height } = Dimensions.get('window');\nexport const CountryList = (props) => {\n    const { data, withAlphaFilter, withEmoji, withFlag, withCallingCode, withCurrency, onSelect, filter, flatListProps, filterFocus, } = props;\n    const flatListRef = useRef(null);\n    const [letter, setLetter] = useState('');\n    const { itemHeight, backgroundColor } = useTheme();\n    const indexLetter = data\n        .map((country) => country.name.substr(0, 1))\n        .join('');\n    const scrollTo = (letter, animated = true) => {\n        const index = indexLetter.indexOf(letter);\n        setLetter(letter);\n        if (flatListRef.current) {\n            flatListRef.current.scrollToIndex({ animated, index });\n        }\n    };\n    const onScrollToIndexFailed = (_info) => {\n        if (flatListRef.current) {\n            flatListRef.current.scrollToEnd();\n            scrollTo(letter);\n        }\n    };\n    const { search, getLetters } = useContext();\n    const letters = getLetters(data);\n    useEffect(() => {\n        if (data && data.length > 0 && filterFocus && !filter) {\n            scrollTo(letters[0], false);\n        }\n    }, [filterFocus]);\n    const initialNumToRender = Math.round(height / (itemHeight || 1));\n    return (React.createElement(View, { style: [styles.container, { backgroundColor }] },\n        React.createElement(FlatList, Object.assign({ onScrollToIndexFailed: true, ref: flatListRef, testID: 'list-countries', keyboardShouldPersistTaps: 'handled', automaticallyAdjustContentInsets: false, scrollEventThrottle: 1, getItemLayout: (_data, index) => ({\n                length: itemHeight + borderBottomWidth,\n                offset: (itemHeight + borderBottomWidth) * index,\n                index,\n            }), renderItem: renderItem({\n                withEmoji,\n                withFlag,\n                withCallingCode,\n                withCurrency,\n                onSelect,\n            }) }, {\n            data: search(filter, data),\n            keyExtractor,\n            onScrollToIndexFailed,\n            ItemSeparatorComponent,\n            initialNumToRender,\n        }, flatListProps)),\n        withAlphaFilter && (React.createElement(ScrollView, { contentContainerStyle: styles.letters, keyboardShouldPersistTaps: 'always' }, letters.map(letter => (React.createElement(Letter, Object.assign({ key: letter }, { letter, scrollTo }))))))));\n};\nCountryList.defaultProps = {\n    filterFocus: undefined,\n};\n//# sourceMappingURL=CountryList.js.map"]},"metadata":{},"sourceType":"module"}