{"ast":null,"code":"import React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PropTypes from 'prop-types';\nimport { useTheme } from \"./CountryTheme\";\nvar styles = StyleSheet.create({\n  container: {\n    height: 48,\n    width: '15%',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  imageStyle: {\n    height: 25,\n    width: 25,\n    resizeMode: 'contain'\n  }\n});\nvar CloseButtonAndroid = function CloseButtonAndroid(props) {\n  var closeImage = require(\"./assets/images/close.android.png\");\n  if (props.image) {\n    closeImage = props.image;\n  }\n  var _useTheme = useTheme(),\n    onBackgroundTextColor = _useTheme.onBackgroundTextColor;\n  return React.createElement(View, {\n    style: [styles.container, props.style]\n  }, React.createElement(TouchableNativeFeedback, {\n    background: Platform.Version < 21 ? TouchableNativeFeedback.SelectableBackground() : TouchableNativeFeedback.SelectableBackgroundBorderless(),\n    onPress: props.onPress\n  }, React.createElement(View, null, React.createElement(Image, {\n    source: closeImage,\n    style: [styles.imageStyle, props.imageStyle, {\n      tintColor: onBackgroundTextColor\n    }]\n  }))));\n};\nvar CloseButtonIOS = function CloseButtonIOS(props) {\n  var closeImage = require(\"./assets/images/close.ios.png\");\n  if (props.image) {\n    closeImage = props.image;\n  }\n  var _useTheme2 = useTheme(),\n    onBackgroundTextColor = _useTheme2.onBackgroundTextColor;\n  return React.createElement(View, {\n    style: [styles.container, props.style]\n  }, React.createElement(TouchableOpacity, {\n    onPress: props.onPress\n  }, React.createElement(Image, {\n    source: closeImage,\n    style: [styles.imageStyle, props.imageStyle, {\n      tintColor: onBackgroundTextColor\n    }]\n  })));\n};\nvar propTypes = {\n  onPress: PropTypes.func,\n  image: PropTypes.any\n};\nCloseButtonIOS.prototype = propTypes;\nCloseButtonAndroid.prototype = propTypes;\nexport default Platform.select({\n  ios: CloseButtonIOS,\n  android: CloseButtonAndroid,\n  web: CloseButtonIOS\n});","map":{"version":3,"sources":["../src/CloseButton.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO;AAAA,OAAA,KAAA;AAAA,OAAA,uBAAA;AAAA,OAAA,IAAA;AAAA,OAAA,QAAA;AAAA,OAAA,gBAAA;AAAA,OAAA,UAAA;AAazB,OAAO,SAAS,MAAM,YAAY;AAClC,SAAS,QAAQ;AAEjB,IAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;EAC/B,SAAS,EAAE;IACT,MAAM,EAAE,EAAE;IACV,KAAK,EAAE,KAAK;IACZ,UAAU,EAAE,QAAQ;IACpB,cAAc,EAAE;GACjB;EACD,UAAU,EAAE;IACV,MAAM,EAAE,EAAE;IACV,KAAK,EAAE,EAAE;IACT,UAAU,EAAE;EACb;CACF,CAAC;AASF,IAAM,kBAAkB,GAAG,SAArB,kBAAkB,CAAI,KAAuB,EAAI;EACrD,IAAI,UAAU,GAAG,OAAO,qCAAqC;EAE7D,IAAI,KAAK,CAAC,KAAK,EAAE;IACf,UAAU,GAAG,KAAK,CAAC,KAAK;EACzB;EACD,IAAA,SAAA,GAAkC,QAAQ,EAAE;IAApC,qBAAqB,GAAA,SAAA,CAArB,qBAAqB;EAC7B,OACE,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA;IAAC,KAAK,EAAE,CAAC,MAAM,CAAC,SAAS,EAAE,KAAK,CAAC,KAAK;EAAC,CAAA,EAC1C,KAAA,CAAA,aAAA,CAAC,uBAAuB,EAAA;IACtB,UAAU,EACR,QAAQ,CAAC,OAAO,GAAG,EAAE,GACjB,uBAAuB,CAAC,oBAAoB,EAAE,GAC9C,uBAAuB,CAAC,8BAA8B,EAAE;IAE9D,OAAO,EAAE,KAAK,CAAC;EAAO,CAAA,EAEtB,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA,IAAA,EACH,KAAA,CAAA,aAAA,CAAC,KAAK,EAAA;IACJ,MAAM,EAAE,UAAU;IAClB,KAAK,EAAE,CACL,MAAM,CAAC,UAAU,EACjB,KAAK,CAAC,UAAU,EAChB;MAAE,SAAS,EAAE;IAAqB,CAAE;EACrC,CAAA,CACD,CACG,CACiB,CACrB;AAEX,CAAC;AAED,IAAM,cAAc,GAAG,SAAjB,cAAc,CAAI,KAAuB,EAAI;EACjD,IAAI,UAAU,GAAG,OAAO,iCAAiC;EAEzD,IAAI,KAAK,CAAC,KAAK,EAAE;IACf,UAAU,GAAG,KAAK,CAAC,KAAK;EACzB;EACD,IAAA,UAAA,GAAkC,QAAQ,EAAE;IAApC,qBAAqB,GAAA,UAAA,CAArB,qBAAqB;EAC7B,OACE,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA;IAAC,KAAK,EAAE,CAAC,MAAM,CAAC,SAAS,EAAE,KAAK,CAAC,KAAK;EAAC,CAAA,EAC1C,KAAA,CAAA,aAAA,CAAC,gBAAgB,EAAA;IAAC,OAAO,EAAE,KAAK,CAAC;EAAO,CAAA,EACtC,KAAA,CAAA,aAAA,CAAC,KAAK,EAAA;IACJ,MAAM,EAAE,UAAU;IAClB,KAAK,EAAE,CACL,MAAM,CAAC,UAAU,EACjB,KAAK,CAAC,UAAU,EAChB;MAAE,SAAS,EAAE;IAAqB,CAAE;EACrC,CAAA,CACD,CACe,CACd;AAEX,CAAC;AAED,IAAM,SAAS,GAAG;EAChB,OAAO,EAAE,SAAS,CAAC,IAAI;EACvB,KAAK,EAAE,SAAS,CAAC;CAClB;AACD,cAAc,CAAC,SAAS,GAAG,SAAS;AACpC,kBAAkB,CAAC,SAAS,GAAG,SAAS;AAExC,eAAe,QAAQ,CAAC,MAAM,CAAC;EAC7B,GAAG,EAAE,cAAc;EACnB,OAAO,EAAE,kBAAkB;EAC3B,GAAG,EAAE;CACN,CAAC","sourceRoot":"","sourcesContent":["import React from 'react';\nimport { Image, TouchableNativeFeedback, View, Platform, TouchableOpacity, StyleSheet } from 'react-native';\nimport PropTypes from 'prop-types';\nimport { useTheme } from './CountryTheme';\nconst styles = StyleSheet.create({\n    container: {\n        height: 48,\n        width: '15%',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    imageStyle: {\n        height: 25,\n        width: 25,\n        resizeMode: 'contain'\n    }\n});\nconst CloseButtonAndroid = (props) => {\n    let closeImage = require('./assets/images/close.android.png');\n    if (props.image) {\n        closeImage = props.image;\n    }\n    const { onBackgroundTextColor } = useTheme();\n    return (React.createElement(View, { style: [styles.container, props.style] },\n        React.createElement(TouchableNativeFeedback, { background: Platform.Version < 21\n                ? TouchableNativeFeedback.SelectableBackground()\n                : TouchableNativeFeedback.SelectableBackgroundBorderless(), onPress: props.onPress },\n            React.createElement(View, null,\n                React.createElement(Image, { source: closeImage, style: [\n                        styles.imageStyle,\n                        props.imageStyle,\n                        { tintColor: onBackgroundTextColor }\n                    ] })))));\n};\nconst CloseButtonIOS = (props) => {\n    let closeImage = require('./assets/images/close.ios.png');\n    if (props.image) {\n        closeImage = props.image;\n    }\n    const { onBackgroundTextColor } = useTheme();\n    return (React.createElement(View, { style: [styles.container, props.style] },\n        React.createElement(TouchableOpacity, { onPress: props.onPress },\n            React.createElement(Image, { source: closeImage, style: [\n                    styles.imageStyle,\n                    props.imageStyle,\n                    { tintColor: onBackgroundTextColor }\n                ] }))));\n};\nconst propTypes = {\n    onPress: PropTypes.func,\n    image: PropTypes.any\n};\nCloseButtonIOS.prototype = propTypes;\nCloseButtonAndroid.prototype = propTypes;\nexport default Platform.select({\n    ios: CloseButtonIOS,\n    android: CloseButtonAndroid,\n    web: CloseButtonIOS\n});\n//# sourceMappingURL=CloseButton.js.map"]},"metadata":{},"sourceType":"module"}