{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";var MapperRegistry=function(){function MapperRegistry(module){_classCallCheck(this,MapperRegistry);this.sortedMappers=[];this.mappers=new Map();this.updatedSinceLastExecute=false;this._module=module;}_createClass(MapperRegistry,[{key:\"startMapper\",value:function startMapper(mapper){this.mappers.set(mapper.id,mapper);this.updatedSinceLastExecute=true;return mapper.id;}},{key:\"stopMapper\",value:function stopMapper(id){this.mappers.delete(id);this.updatedSinceLastExecute=true;}},{key:\"execute\",value:function execute(){if(this.updatedSinceLastExecute){this.updateOrder();this.updatedSinceLastExecute=false;}for(var i=0,len=this.sortedMappers.length;i<len;++i){var mapper=this.sortedMappers[i];if(mapper.dirty){mapper.execute();}}}},{key:\"updateOrder\",value:function updateOrder(){var nodes=_toConsumableArray(this.mappers.values()).map(function(mapper){return new Node(mapper);});var mappersById={};this.mappers.forEach(function(mapper){mappersById[mapper.id]=mapper;});for(var i=0,nodesLen=nodes.length;i<nodesLen;++i){var node=nodes[i];if(node.mapper.outputs.length===0){continue;}for(var j=0;j<nodesLen;++j){var restNode=nodes[j];if(i===j||restNode.mapper.inputs.length===0){continue;}for(var outi=0,outputsLen=node.mapper.outputs.length;outi<outputsLen;++outi){for(var resti=0,restLen=restNode.mapper.inputs.length;resti<restLen;++resti){if(node.mapper.outputs[outi]._id===restNode.mapper.inputs[resti]._id){node.children.push(restNode);}}}}}var post={};var postCounter=1;var dfs=function dfs(node){var index=nodes.indexOf(node);if(index===-1){return;}++postCounter;nodes.splice(index,1);if(node.children.length===0&&nodes.length>0){post[node.mapper.id]=postCounter++;dfs(nodes[0]);return;}for(var _i=0,len=node.children.length;_i<len;++_i){dfs(node.children[_i]);}post[node.mapper.id]=postCounter++;};while(nodes.length)dfs(nodes[0]);var postArray=Object.keys(post).map(function(key){var num=parseInt(key);return[num,post[num]];});postArray.sort(function(a,b){return b[1]-a[1];});this.sortedMappers=[];for(var _i2=0,len=postArray.length;_i2<len;++_i2){var _postArray$_i=_slicedToArray(postArray[_i2],1),id=_postArray$_i[0];this.sortedMappers.push(mappersById[id]);}}},{key:\"needRunOnRender\",get:function get(){return this.updatedSinceLastExecute;}}]);return MapperRegistry;}();export{MapperRegistry as default};var Node=_createClass(function Node(mapper){var children=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];_classCallCheck(this,Node);this.mapper=mapper;this.children=children;});","map":{"version":3,"names":["MapperRegistry","module","sortedMappers","mappers","Map","updatedSinceLastExecute","_module","mapper","set","id","delete","updateOrder","i","len","length","dirty","execute","nodes","values","map","Node","mappersById","forEach","nodesLen","node","outputs","j","restNode","inputs","outi","outputsLen","resti","restLen","_id","children","push","post","postCounter","dfs","index","indexOf","splice","postArray","Object","keys","key","num","parseInt","sort","a","b"],"sources":["/Users/pg328/Projects/friendzone/node_modules/react-native-reanimated/lib/reanimated2/js-reanimated/MapperRegistry.js"],"sourcesContent":["export default class MapperRegistry {\n    constructor(module) {\n        this.sortedMappers = [];\n        this.mappers = new Map();\n        this.updatedSinceLastExecute = false;\n        this._module = module;\n    }\n    startMapper(mapper) {\n        this.mappers.set(mapper.id, mapper);\n        this.updatedSinceLastExecute = true;\n        return mapper.id;\n    }\n    stopMapper(id) {\n        this.mappers.delete(id);\n        this.updatedSinceLastExecute = true;\n    }\n    execute() {\n        if (this.updatedSinceLastExecute) {\n            this.updateOrder();\n            this.updatedSinceLastExecute = false;\n        }\n        for (let i = 0, len = this.sortedMappers.length; i < len; ++i) {\n            const mapper = this.sortedMappers[i];\n            if (mapper.dirty) {\n                mapper.execute();\n            }\n        }\n    }\n    updateOrder() {\n        const nodes = [...this.mappers.values()].map((mapper) => new Node(mapper));\n        const mappersById = {};\n        this.mappers.forEach((mapper) => {\n            mappersById[mapper.id] = mapper;\n        });\n        // create a graph from array of nodes\n        for (let i = 0, nodesLen = nodes.length; i < nodesLen; ++i) {\n            const node = nodes[i];\n            if (node.mapper.outputs.length === 0) {\n                continue;\n            }\n            for (let j = 0; j < nodesLen; ++j) {\n                const restNode = nodes[j];\n                if (i === j || restNode.mapper.inputs.length === 0) {\n                    continue;\n                }\n                for (let outi = 0, outputsLen = node.mapper.outputs.length; outi < outputsLen; ++outi) {\n                    for (let resti = 0, restLen = restNode.mapper.inputs.length; resti < restLen; ++resti) {\n                        if (node.mapper.outputs[outi]._id ===\n                            restNode.mapper.inputs[resti]._id) {\n                            node.children.push(restNode);\n                        }\n                    }\n                }\n            }\n        }\n        const post = {};\n        let postCounter = 1;\n        const dfs = (node) => {\n            const index = nodes.indexOf(node);\n            if (index === -1) {\n                // this node has already been handled\n                return;\n            }\n            ++postCounter;\n            nodes.splice(index, 1);\n            if (node.children.length === 0 && nodes.length > 0) {\n                post[node.mapper.id] = postCounter++;\n                dfs(nodes[0]);\n                return;\n            }\n            for (let i = 0, len = node.children.length; i < len; ++i) {\n                dfs(node.children[i]);\n            }\n            post[node.mapper.id] = postCounter++;\n        };\n        while (nodes.length)\n            dfs(nodes[0]);\n        const postArray = Object.keys(post).map((key) => {\n            const num = parseInt(key);\n            return [num, post[num]];\n        });\n        postArray.sort((a, b) => {\n            return b[1] - a[1];\n        });\n        // clear sorted mappers\n        this.sortedMappers = [];\n        for (let i = 0, len = postArray.length; i < len; ++i) {\n            const [id] = postArray[i];\n            this.sortedMappers.push(mappersById[id]);\n        }\n    }\n    get needRunOnRender() {\n        return this.updatedSinceLastExecute;\n    }\n}\nclass Node {\n    constructor(mapper, children = []) {\n        this.mapper = mapper;\n        this.children = children;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}