{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import AnimatedNode from\"./AnimatedNode\";import invariant from'invariant';import{val}from\"../val\";var AnimatedAlways=function(_AnimatedNode){_inherits(AnimatedAlways,_AnimatedNode);var _super=_createSuper(AnimatedAlways);function AnimatedAlways(what){var _this;_classCallCheck(this,AnimatedAlways);invariant(what instanceof AnimatedNode,\"Reanimated: Animated.always node argument should be of type AnimatedNode but got \"+what);_this=_super.call(this,{type:'always',what:what},[what]);_this._what=what;return _this;}_createClass(AnimatedAlways,[{key:\"toString\",value:function toString(){return\"AnimatedAlways, id: \"+this.__nodeID;}},{key:\"update\",value:function update(){this.__getValue();}},{key:\"__onEvaluate\",value:function __onEvaluate(){val(this._what);return 0;}}]);return AnimatedAlways;}(AnimatedNode);export function createAnimatedAlways(item){return new AnimatedAlways(item);}","map":{"version":3,"names":["AnimatedNode","invariant","val","AnimatedAlways","what","type","_what","__nodeID","__getValue","createAnimatedAlways","item"],"sources":["/Users/pg328/Projects/friendzone/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedAlways.js"],"sourcesContent":["import AnimatedNode from './AnimatedNode';\nimport invariant from 'invariant';\nimport { val } from '../val';\n\nclass AnimatedAlways extends AnimatedNode {\n  _what;\n\n  constructor(what) {\n    invariant(\n      what instanceof AnimatedNode,\n      `Reanimated: Animated.always node argument should be of type AnimatedNode but got ${what}`\n    );\n    super({ type: 'always', what }, [what]);\n    this._what = what;\n  }\n\n  toString() {\n    return `AnimatedAlways, id: ${this.__nodeID}`;\n  }\n\n  update() {\n    this.__getValue();\n  }\n\n  __onEvaluate() {\n    val(this._what);\n    return 0;\n  }\n}\n\nexport function createAnimatedAlways(item) {\n  return new AnimatedAlways(item);\n}\n"],"mappings":"qgCAAA,MAAOA,aAAY,sBACnB,MAAOC,UAAS,KAAM,WAAW,CACjC,OAASC,GAAG,cAAiB,GAEvBC,eAAc,yGAGlB,wBAAYC,IAAI,CAAE,gDAChBH,SAAS,CACPG,IAAI,WAAYJ,aAAY,qFACwDI,IAAI,CACzF,CACD,uBAAM,CAAEC,IAAI,CAAE,QAAQ,CAAED,IAAI,CAAJA,IAAK,CAAC,CAAE,CAACA,IAAI,CAAC,EACtC,MAAKE,KAAK,CAAGF,IAAI,CAAC,aACpB,CAAC,mDAED,mBAAW,CACT,6BAA8B,IAAI,CAACG,QAAQ,CAC7C,CAAC,sBAED,iBAAS,CACP,IAAI,CAACC,UAAU,EAAE,CACnB,CAAC,4BAED,uBAAe,CACbN,GAAG,CAAC,IAAI,CAACI,KAAK,CAAC,CACf,MAAO,EAAC,CACV,CAAC,4BAvB0BN,YAAY,EA0BzC,MAAO,SAASS,qBAAoB,CAACC,IAAI,CAAE,CACzC,MAAO,IAAIP,eAAc,CAACO,IAAI,CAAC,CACjC"},"metadata":{},"sourceType":"module"}