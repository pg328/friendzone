{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import invariant from'invariant';import{adapt}from\"../core/AnimatedBlock\";import{val}from\"../val\";import AnimatedNode from\"./AnimatedNode\";var AnimatedCond=function(_AnimatedNode){_inherits(AnimatedCond,_AnimatedNode);var _super=_createSuper(AnimatedCond);function AnimatedCond(condition,ifBlock,elseBlock){var _this;_classCallCheck(this,AnimatedCond);invariant(condition instanceof AnimatedNode,\"Reanimated: Animated.cond node first argument should be of type AnimatedNode but got \"+condition);invariant(ifBlock instanceof AnimatedNode,\"Reanimated: Animated.cond node second argument should be of type AnimatedNode but got \"+ifBlock);invariant(elseBlock instanceof AnimatedNode||elseBlock===undefined,\"Reanimated: Animated.cond node third argument should be of type AnimatedNode or should be undefined but got \"+elseBlock);_this=_super.call(this,{type:'cond',cond:condition,ifBlock:ifBlock,elseBlock:elseBlock},[condition,ifBlock,elseBlock]);_this._condition=condition;_this._ifBlock=ifBlock;_this._elseBlock=elseBlock;return _this;}_createClass(AnimatedCond,[{key:\"toString\",value:function toString(){return\"AnimatedCond, id: \"+this.__nodeID;}},{key:\"__onEvaluate\",value:function __onEvaluate(){if(val(this._condition)){return val(this._ifBlock);}else{return this._elseBlock!==undefined?val(this._elseBlock):undefined;}}}]);return AnimatedCond;}(AnimatedNode);export function createAnimatedCond(cond,ifBlock,elseBlock){return new AnimatedCond(adapt(cond),adapt(ifBlock),elseBlock===undefined?undefined:adapt(elseBlock));}","map":{"version":3,"names":["invariant","adapt","val","AnimatedNode","AnimatedCond","condition","ifBlock","elseBlock","undefined","type","cond","_condition","_ifBlock","_elseBlock","__nodeID","createAnimatedCond"],"sources":["/Users/pg328/Projects/friendzone/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedCond.js"],"sourcesContent":["import invariant from 'invariant';\nimport { adapt } from '../core/AnimatedBlock';\nimport { val } from '../val';\nimport AnimatedNode from './AnimatedNode';\n\nclass AnimatedCond extends AnimatedNode {\n  _condition;\n  _ifBlock;\n  _elseBlock;\n\n  constructor(condition, ifBlock, elseBlock) {\n    invariant(\n      condition instanceof AnimatedNode,\n      `Reanimated: Animated.cond node first argument should be of type AnimatedNode but got ${condition}`\n    );\n    invariant(\n      ifBlock instanceof AnimatedNode,\n      `Reanimated: Animated.cond node second argument should be of type AnimatedNode but got ${ifBlock}`\n    );\n    invariant(\n      elseBlock instanceof AnimatedNode || elseBlock === undefined,\n      `Reanimated: Animated.cond node third argument should be of type AnimatedNode or should be undefined but got ${elseBlock}`\n    );\n    super(\n      {\n        type: 'cond',\n        cond: condition,\n        ifBlock,\n        elseBlock,\n      },\n      [condition, ifBlock, elseBlock]\n    );\n    this._condition = condition;\n    this._ifBlock = ifBlock;\n    this._elseBlock = elseBlock;\n  }\n\n  toString() {\n    return `AnimatedCond, id: ${this.__nodeID}`;\n  }\n\n  __onEvaluate() {\n    if (val(this._condition)) {\n      return val(this._ifBlock);\n    } else {\n      return this._elseBlock !== undefined ? val(this._elseBlock) : undefined;\n    }\n  }\n}\n\nexport function createAnimatedCond(cond, ifBlock, elseBlock) {\n  return new AnimatedCond(\n    adapt(cond),\n    adapt(ifBlock),\n    elseBlock === undefined ? undefined : adapt(elseBlock)\n  );\n}\n"],"mappings":"qgCAAA,MAAOA,UAAS,KAAM,WAAW,CACjC,OAASC,KAAK,6BACd,OAASC,GAAG,cACZ,MAAOC,aAAY,sBAAuB,GAEpCC,aAAY,qGAKhB,sBAAYC,SAAS,CAAEC,OAAO,CAAEC,SAAS,CAAE,8CACzCP,SAAS,CACPK,SAAS,WAAYF,aAAY,yFACuDE,SAAS,CAClG,CACDL,SAAS,CACPM,OAAO,WAAYH,aAAY,0FAC0DG,OAAO,CACjG,CACDN,SAAS,CACPO,SAAS,WAAYJ,aAAY,EAAII,SAAS,GAAKC,SAAS,gHACmDD,SAAS,CACzH,CACD,uBACE,CACEE,IAAI,CAAE,MAAM,CACZC,IAAI,CAAEL,SAAS,CACfC,OAAO,CAAPA,OAAO,CACPC,SAAS,CAATA,SACF,CAAC,CACD,CAACF,SAAS,CAAEC,OAAO,CAAEC,SAAS,CAAC,EAEjC,MAAKI,UAAU,CAAGN,SAAS,CAC3B,MAAKO,QAAQ,CAAGN,OAAO,CACvB,MAAKO,UAAU,CAAGN,SAAS,CAAC,aAC9B,CAAC,iDAED,mBAAW,CACT,2BAA4B,IAAI,CAACO,QAAQ,CAC3C,CAAC,4BAED,uBAAe,CACb,GAAIZ,GAAG,CAAC,IAAI,CAACS,UAAU,CAAC,CAAE,CACxB,MAAOT,IAAG,CAAC,IAAI,CAACU,QAAQ,CAAC,CAC3B,CAAC,IAAM,CACL,MAAO,KAAI,CAACC,UAAU,GAAKL,SAAS,CAAGN,GAAG,CAAC,IAAI,CAACW,UAAU,CAAC,CAAGL,SAAS,CACzE,CACF,CAAC,0BA1CwBL,YAAY,EA6CvC,MAAO,SAASY,mBAAkB,CAACL,IAAI,CAAEJ,OAAO,CAAEC,SAAS,CAAE,CAC3D,MAAO,IAAIH,aAAY,CACrBH,KAAK,CAACS,IAAI,CAAC,CACXT,KAAK,CAACK,OAAO,CAAC,CACdC,SAAS,GAAKC,SAAS,CAAGA,SAAS,CAAGP,KAAK,CAACM,SAAS,CAAC,CACvD,CACH"},"metadata":{},"sourceType":"module"}