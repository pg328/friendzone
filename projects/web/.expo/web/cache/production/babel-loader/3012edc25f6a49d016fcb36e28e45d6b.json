{"ast":null,"code":"import _construct from\"@babel/runtime/helpers/construct\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import AnimatedNode from\"./AnimatedNode\";import{createAnimatedCallFunc}from\"./AnimatedCallFunc\";import{createAnimatedParam}from\"./AnimatedParam\";import{val}from\"../val\";import invariant from'invariant';var AnimatedFunction=function(_AnimatedNode){_inherits(AnimatedFunction,_AnimatedNode);var _super=_createSuper(AnimatedFunction);function AnimatedFunction(what){var _this;_classCallCheck(this,AnimatedFunction);invariant(what instanceof AnimatedNode,\"Reanimated: AnimatedCallFunc 'what' argument should be of type AnimatedNode but got \"+what);for(var _len=arguments.length,params=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){params[_key-1]=arguments[_key];}_this=_super.call(this,{type:'func',what:what},[what].concat(params));_this._what=what;_this.__attach();return _this;}_createClass(AnimatedFunction,[{key:\"__onEvaluate\",value:function __onEvaluate(){return val(this._what);}},{key:\"toString\",value:function toString(){return\"AnimatedFunction, id: \"+this.__nodeID;}}]);return AnimatedFunction;}(AnimatedNode);export function createAnimatedFunction(cb){var params=new Array(cb.length);for(var i=0;i<params.length;i++){params[i]=createAnimatedParam();}var what=cb.apply(void 0,params);var func=_construct(AnimatedFunction,[what].concat(params));return function(){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}if(args.length!==params.length){throw new Error('Parameter mismatch when calling reanimated function. Expected '+params.length+' parameters, got '+args.length+'.');}return createAnimatedCallFunc(func,args,params);};}","map":{"version":3,"names":["AnimatedNode","createAnimatedCallFunc","createAnimatedParam","val","invariant","AnimatedFunction","what","params","type","_what","__attach","__nodeID","createAnimatedFunction","cb","Array","length","i","func","args","Error"],"sources":["/Users/pg328/Projects/friendzone/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedFunction.js"],"sourcesContent":["import AnimatedNode from './AnimatedNode';\nimport { createAnimatedCallFunc } from './AnimatedCallFunc';\nimport { createAnimatedParam } from './AnimatedParam';\nimport { val } from '../val';\nimport invariant from 'invariant';\n\nclass AnimatedFunction extends AnimatedNode {\n  _what;\n\n  constructor(what, ...params) {\n    invariant(\n      what instanceof AnimatedNode,\n      `Reanimated: AnimatedCallFunc 'what' argument should be of type AnimatedNode but got ${what}`\n    );\n    super(\n      {\n        type: 'func',\n        what,\n      },\n      [what, ...params]\n    );\n    this._what = what;\n    this.__attach();\n  }\n\n  __onEvaluate() {\n    return val(this._what);\n  }\n\n  toString() {\n    return `AnimatedFunction, id: ${this.__nodeID}`;\n  }\n}\n\nexport function createAnimatedFunction(cb) {\n  const params = new Array(cb.length);\n  for (let i = 0; i < params.length; i++) {\n    params[i] = createAnimatedParam();\n  }\n  // eslint-disable-next-line node/no-callback-literal\n  const what = cb(...params);\n  const func = new AnimatedFunction(what, ...params);\n  return (...args) => {\n    if (args.length !== params.length) {\n      throw new Error(\n        'Parameter mismatch when calling reanimated function. Expected ' +\n          params.length +\n          ' parameters, got ' +\n          args.length +\n          '.'\n      );\n    }\n    return createAnimatedCallFunc(func, args, params);\n  };\n}\n"],"mappings":"8jCAAA,MAAOA,aAAY,sBACnB,OAASC,sBAAsB,0BAC/B,OAASC,mBAAmB,uBAC5B,OAASC,GAAG,cACZ,MAAOC,UAAS,KAAM,WAAW,CAAC,GAE5BC,iBAAgB,6GAGpB,0BAAYC,IAAI,CAAa,kDAC3BF,SAAS,CACPE,IAAI,WAAYN,aAAY,wFAC2DM,IAAI,CAC5F,CAAC,8BAJiBC,MAAM,qDAANA,MAAM,0BAKzB,uBACE,CACEC,IAAI,CAAE,MAAM,CACZF,IAAI,CAAJA,IACF,CAAC,EACAA,IAAI,SAAKC,MAAM,GAElB,MAAKE,KAAK,CAAGH,IAAI,CACjB,MAAKI,QAAQ,EAAE,CAAC,aAClB,CAAC,yDAED,uBAAe,CACb,MAAOP,IAAG,CAAC,IAAI,CAACM,KAAK,CAAC,CACxB,CAAC,wBAED,mBAAW,CACT,+BAAgC,IAAI,CAACE,QAAQ,CAC/C,CAAC,8BAzB4BX,YAAY,EA4B3C,MAAO,SAASY,uBAAsB,CAACC,EAAE,CAAE,CACzC,GAAMN,OAAM,CAAG,GAAIO,MAAK,CAACD,EAAE,CAACE,MAAM,CAAC,CACnC,IAAK,GAAIC,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAGT,MAAM,CAACQ,MAAM,CAAEC,CAAC,EAAE,CAAE,CACtCT,MAAM,CAACS,CAAC,CAAC,CAAGd,mBAAmB,EAAE,CACnC,CAEA,GAAMI,KAAI,CAAGO,EAAE,cAAIN,MAAM,CAAC,CAC1B,GAAMU,KAAI,YAAOZ,gBAAgB,EAACC,IAAI,SAAKC,MAAM,EAAC,CAClD,MAAO,WAAa,gCAATW,IAAI,+CAAJA,IAAI,0BACb,GAAIA,IAAI,CAACH,MAAM,GAAKR,MAAM,CAACQ,MAAM,CAAE,CACjC,KAAM,IAAII,MAAK,CACb,gEAAgE,CAC9DZ,MAAM,CAACQ,MAAM,CACb,mBAAmB,CACnBG,IAAI,CAACH,MAAM,CACX,GAAG,CACN,CACH,CACA,MAAOd,uBAAsB,CAACgB,IAAI,CAAEC,IAAI,CAAEX,MAAM,CAAC,CACnD,CAAC,CACH"},"metadata":{},"sourceType":"module"}