{"ast":null,"code":"\"use strict\";var _toConsumableArray=require(\"@babel/runtime/helpers/toConsumableArray\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.FlingGestureHandler=exports.flingHandlerName=exports.flingGestureHandlerProps=void 0;var _createHandler=_interopRequireDefault(require(\"./createHandler\"));var _gestureHandlerCommon=require(\"./gestureHandlerCommon\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var flingGestureHandlerProps=['numberOfPointers','direction'];exports.flingGestureHandlerProps=flingGestureHandlerProps;var flingHandlerName='FlingGestureHandler';exports.flingHandlerName=flingHandlerName;var FlingGestureHandler=(0,_createHandler.default)({name:flingHandlerName,allowedProps:[].concat(_toConsumableArray(_gestureHandlerCommon.baseGestureHandlerProps),flingGestureHandlerProps),config:{}});exports.FlingGestureHandler=FlingGestureHandler;","map":{"version":3,"sources":["FlingGestureHandler.ts"],"names":["flingGestureHandlerProps","flingHandlerName","FlingGestureHandler","name","allowedProps","baseGestureHandlerProps","config"],"mappings":"8OAAA,GAAA,eAAA,CAAA,sBAAA,CAAA,OAAA,mBAAA,CAAA,CACA,GAAA,sBAAA,CAAA,OAAA,0BAAA,C,mFAKO,GAAMA,yBAAwB,CAAG,CACtC,kBADsC,CAEtC,WAFsC,CAAjC,C,0DAsCA,GAAMC,iBAAgB,CAAG,qBAAzB,C,0CAIA,GAAMC,oBAAmB,CAAG,CAAA,CAAA,CAAA,cAAA,CAAA,OAAA,EAGjC,CACAC,IAAI,CAAEF,gBADN,CAEAG,YAAY,8BACPC,qBAAAA,CAAAA,uBADS,EAETL,wBAFS,CAFd,CAMAM,MAAM,CAAE,CAAA,CANR,CAHiC,CAA5B,C","sourcesContent":["import createHandler from './createHandler';\nimport {\n  BaseGestureHandlerProps,\n  baseGestureHandlerProps,\n} from './gestureHandlerCommon';\n\nexport const flingGestureHandlerProps = [\n  'numberOfPointers',\n  'direction',\n] as const;\n\nexport type FlingGestureHandlerEventPayload = {\n  x: number;\n  y: number;\n  absoluteX: number;\n  absoluteY: number;\n};\nexport interface FlingGestureConfig {\n  /**\n   * Expressed allowed direction of movement. It's possible to pass one or many\n   * directions in one parameter:\n   *\n   * ```js\n   * direction={Directions.RIGHT | Directions.LEFT}\n   * ```\n   *\n   * or\n   *\n   * ```js\n   * direction={Directions.DOWN}\n   * ```\n   */\n  direction?: number;\n\n  /**\n   * Determine exact number of points required to handle the fling gesture.\n   */\n  numberOfPointers?: number;\n}\n\nexport interface FlingGestureHandlerProps\n  extends BaseGestureHandlerProps<FlingGestureHandlerEventPayload>,\n    FlingGestureConfig {}\n\nexport const flingHandlerName = 'FlingGestureHandler';\n\nexport type FlingGestureHandler = typeof FlingGestureHandler;\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\nexport const FlingGestureHandler = createHandler<\n  FlingGestureHandlerProps,\n  FlingGestureHandlerEventPayload\n>({\n  name: flingHandlerName,\n  allowedProps: [\n    ...baseGestureHandlerProps,\n    ...flingGestureHandlerProps,\n  ] as const,\n  config: {},\n});\n"]},"metadata":{},"sourceType":"script"}