{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.FlatList=exports.DrawerLayoutAndroid=exports.TextInput=exports.Switch=exports.ScrollView=void 0;var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _createNativeWrapper=_interopRequireDefault(require(\"../handlers/createNativeWrapper\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _getRequireWildcardCache(){if(typeof WeakMap!==\"function\")return null;var cache=new WeakMap();_getRequireWildcardCache=function _getRequireWildcardCache(){return cache;};return cache;}function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!==\"object\"&&typeof obj!==\"function\"){return{default:obj};}var cache=_getRequireWildcardCache();if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}var ScrollView=(0,_createNativeWrapper.default)(_reactNative.ScrollView,{disallowInterruption:true});exports.ScrollView=ScrollView;var Switch=(0,_createNativeWrapper.default)(_reactNative.Switch,{shouldCancelWhenOutside:false,shouldActivateOnStart:true,disallowInterruption:true});exports.Switch=Switch;var TextInput=(0,_createNativeWrapper.default)(_reactNative.TextInput);exports.TextInput=TextInput;var DrawerLayoutAndroid=(0,_createNativeWrapper.default)(_reactNative.DrawerLayoutAndroid,{disallowInterruption:true});exports.DrawerLayoutAndroid=DrawerLayoutAndroid;DrawerLayoutAndroid.positions=_reactNative.DrawerLayoutAndroid.positions;var FlatList=React.forwardRef(function(props,ref){return React.createElement(_reactNative.FlatList,_extends({ref:ref},props,{renderScrollComponent:function renderScrollComponent(scrollProps){return React.createElement(ScrollView,scrollProps);}}));});exports.FlatList=FlatList;","map":{"version":3,"sources":["GestureComponents.web.tsx"],"names":["ScrollView","RNScrollView","disallowInterruption","Switch","RNSwitch","shouldCancelWhenOutside","shouldActivateOnStart","TextInput","RNTextInput","DrawerLayoutAndroid","RNDrawerLayoutAndroid","positions","FlatList","forwardRef","props","ref","scrollProps"],"mappings":"8KAAA,GAAA,MAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CAAA,wDAUA,GAAA,qBAAA,CAAA,sBAAA,CAAA,OAAA,mCAAA,CAAA,C,wrCAEO,GAAMA,WAAU,CAAG,CAAA,CAAA,CAAA,oBAAA,CAAA,OAAA,EAAoBC,YAAAA,CAAAA,UAApB,CAAkC,CAC1DC,oBAAoB,CAAE,IADoC,CAAlC,CAAnB,C,8BAIA,GAAMC,OAAM,CAAG,CAAA,CAAA,CAAA,oBAAA,CAAA,OAAA,EAAoBC,YAAAA,CAAAA,MAApB,CAA8B,CAClDC,uBAAuB,CAAE,KADyB,CAElDC,qBAAqB,CAAE,IAF2B,CAGlDJ,oBAAoB,CAAE,IAH4B,CAA9B,CAAf,C,sBAKA,GAAMK,UAAS,CAAG,CAAA,CAAA,CAAA,oBAAA,CAAA,OAAA,EAAoBC,YAAAA,CAAAA,SAApB,CAAlB,C,4BACA,GAAMC,oBAAmB,CAAG,CAAA,CAAA,CAAA,oBAAA,CAAA,OAAA,EAAoBC,YAAAA,CAAAA,mBAApB,CAA2C,CAC5ER,oBAAoB,CAAE,IADsD,CAA3C,CAA5B,C,gDAIPO,mBAAmB,CAACE,SAApBF,CAAgCC,YAAAA,CAAAA,mBAAAA,CAAsBC,SAAtDF,CAEO,GAAMG,SAAQ,CAAG,KAAK,CAACC,UAAN,CACtB,SAAoBC,KAApB,CAAiDC,GAAjD,QACE,MAAA,CAAA,aAAA,CAAC,YAAA,CAAA,QAAD,CAAA,QAAA,CAAA,CACE,GAAG,CAAEA,GADP,CAAA,CAEMD,KAFN,CAAA,CAGE,qBAAqB,CAAGE,+BAAAA,WAAD,QAAiB,MAAA,CAAA,aAAA,CAAC,UAAD,CAAgBA,WAAhB,CAAA,EAH1C,CAAA,CAAA,CAFoB,GAAjB,C","sourcesContent":["import * as React from 'react';\nimport {\n  DrawerLayoutAndroid as RNDrawerLayoutAndroid,\n  FlatList as RNFlatList,\n  Switch as RNSwitch,\n  TextInput as RNTextInput,\n  ScrollView as RNScrollView,\n  FlatListProps,\n} from 'react-native';\n\nimport createNativeWrapper from '../handlers/createNativeWrapper';\n\nexport const ScrollView = createNativeWrapper(RNScrollView, {\n  disallowInterruption: true,\n});\n\nexport const Switch = createNativeWrapper(RNSwitch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true,\n});\nexport const TextInput = createNativeWrapper(RNTextInput);\nexport const DrawerLayoutAndroid = createNativeWrapper(RNDrawerLayoutAndroid, {\n  disallowInterruption: true,\n});\n// @ts-ignore -- TODO(TS) to investigate if it's needed\nDrawerLayoutAndroid.positions = RNDrawerLayoutAndroid.positions;\n\nexport const FlatList = React.forwardRef(\n  <ItemT extends any>(props: FlatListProps<ItemT>, ref: any) => (\n    <RNFlatList\n      ref={ref}\n      {...props}\n      renderScrollComponent={(scrollProps) => <ScrollView {...scrollProps} />}\n    />\n  )\n);\n"]},"metadata":{},"sourceType":"script"}