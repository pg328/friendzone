{"ast":null,"code":"\"use strict\";var _classCallCheck=require(\"@babel/runtime/helpers/classCallCheck\");var _createClass=require(\"@babel/runtime/helpers/createClass\");var _inherits=require(\"@babel/runtime/helpers/inherits\");var _possibleConstructorReturn=require(\"@babel/runtime/helpers/possibleConstructorReturn\");var _getPrototypeOf=require(\"@babel/runtime/helpers/getPrototypeOf\");function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _GestureHandler=_interopRequireDefault(require(\"./GestureHandler\"));var _reactNative=require(\"react-native-web/dist/index\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var DraggingGestureHandler=function(_GestureHandler$defau){_inherits(DraggingGestureHandler,_GestureHandler$defau);var _super=_createSuper(DraggingGestureHandler);function DraggingGestureHandler(){_classCallCheck(this,DraggingGestureHandler);return _super.apply(this,arguments);}_createClass(DraggingGestureHandler,[{key:\"shouldEnableGestureOnSetup\",get:function get(){return true;}},{key:\"transformNativeEvent\",value:function transformNativeEvent(_ref){var deltaX=_ref.deltaX,deltaY=_ref.deltaY,velocityX=_ref.velocityX,velocityY=_ref.velocityY,_ref$center=_ref.center,x=_ref$center.x,y=_ref$center.y;var rect=this.view.getBoundingClientRect();var ratio=_reactNative.PixelRatio.get();return{translationX:deltaX-(this.__initialX||0),translationY:deltaY-(this.__initialY||0),absoluteX:x,absoluteY:y,velocityX:velocityX*ratio,velocityY:velocityY*ratio,x:x-rect.left,y:y-rect.top};}}]);return DraggingGestureHandler;}(_GestureHandler.default);var _default=DraggingGestureHandler;exports.default=_default;","map":{"version":3,"sources":["DraggingGestureHandler.ts"],"names":["DraggingGestureHandler","GestureHandler","shouldEnableGestureOnSetup","transformNativeEvent","deltaX","deltaY","velocityX","velocityY","center","x","y","rect","view","getBoundingClientRect","ratio","PixelRatio","get","translationX","__initialX","translationY","__initialY","absoluteX","absoluteY","left","top"],"mappings":"4mCAEA,GAAA,gBAAA,CAAA,sBAAA,CAAA,OAAA,oBAAA,CAAA,CAAA,wD,sFAGeA,uBAAf,wUACME,cAA6B,CAC/B,MAAO,KAAP,CACD,CAAA,oCAEDC,mCAMmB,IALjBC,OADmB,MACnBA,MADmB,CAEnBC,MAFmB,MAEnBA,MAFmB,CAGnBC,SAHmB,MAGnBA,SAHmB,CAInBC,SAJmB,MAInBA,SAJmB,kBAKnBC,MAAM,CAAIC,CAAF,aAAEA,CAAF,CAAKC,CAAAA,aAAAA,CAAAA,CAGb,GAAMC,KAAI,CAAG,IAAA,CAAKC,IAAL,CAAWC,qBAAX,EAAb,CACA,GAAMC,MAAK,CAAGC,YAAAA,CAAAA,UAAAA,CAAWC,GAAXD,EAAd,CACA,MAAO,CACLE,YAAY,CAAEb,MAAM,EAAI,IAAA,CAAKc,UAAL,EAAmB,CAAvB,CADf,CAELC,YAAY,CAAEd,MAAM,EAAI,IAAA,CAAKe,UAAL,EAAmB,CAAvB,CAFf,CAGLC,SAAS,CAAEZ,CAHN,CAILa,SAAS,CAAEZ,CAJN,CAKLJ,SAAS,CAAEA,SAAS,CAAGQ,KALlB,CAMLP,SAAS,CAAEA,SAAS,CAAGO,KANlB,CAOLL,CAAC,CAAEA,CAAC,CAAGE,IAAI,CAACY,IAPP,CAQLb,CAAC,CAAEA,CAAC,CAAGC,IAAI,CAACa,GARP,CAAP,CAUD,CAAA,oCAzB2CvB,eAAAA,CAAAA,OAA9C,E,aA4BeD,sB","sourcesContent":["/* eslint-disable eslint-comments/no-unlimited-disable */\n/* eslint-disable */\nimport GestureHandler, { HammerInputExt } from './GestureHandler';\nimport { PixelRatio } from 'react-native';\n\nabstract class DraggingGestureHandler extends GestureHandler {\n  get shouldEnableGestureOnSetup() {\n    return true;\n  }\n\n  transformNativeEvent({\n    deltaX,\n    deltaY,\n    velocityX,\n    velocityY,\n    center: { x, y },\n  }: HammerInputExt) {\n    // @ts-ignore FIXME(TS)\n    const rect = this.view!.getBoundingClientRect();\n    const ratio = PixelRatio.get();\n    return {\n      translationX: deltaX - (this.__initialX || 0),\n      translationY: deltaY - (this.__initialY || 0),\n      absoluteX: x,\n      absoluteY: y,\n      velocityX: velocityX * ratio,\n      velocityY: velocityY * ratio,\n      x: x - rect.left,\n      y: y - rect.top,\n    };\n  }\n}\n\nexport default DraggingGestureHandler;\n"]},"metadata":{},"sourceType":"script"}