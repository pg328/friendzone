{"ast":null,"code":"\"use strict\";var _classCallCheck=require(\"@babel/runtime/helpers/classCallCheck\");var _createClass=require(\"@babel/runtime/helpers/createClass\");var _get=require(\"@babel/runtime/helpers/get\");var _inherits=require(\"@babel/runtime/helpers/inherits\");var _possibleConstructorReturn=require(\"@babel/runtime/helpers/possibleConstructorReturn\");var _getPrototypeOf=require(\"@babel/runtime/helpers/getPrototypeOf\");function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}Object.defineProperty(exports,\"__esModule\",{value:true});exports.ManualGesture=void 0;var _gesture=require(\"./gesture\");function changeEventCalculator(current,_previous){'worklet';return current;}var ManualGesture=function(_gesture$ContinousBas){_inherits(ManualGesture,_gesture$ContinousBas);var _super=_createSuper(ManualGesture);function ManualGesture(){var _this;_classCallCheck(this,ManualGesture);_this=_super.call(this);_this.handlerName='ManualGestureHandler';return _this;}_createClass(ManualGesture,[{key:\"onChange\",value:function onChange(callback){this.handlers.changeEventCalculator=changeEventCalculator;return _get(_getPrototypeOf(ManualGesture.prototype),\"onChange\",this).call(this,callback);}}]);return ManualGesture;}(_gesture.ContinousBaseGesture);exports.ManualGesture=ManualGesture;","map":{"version":3,"sources":["manualGesture.ts"],"names":["changeEventCalculator","current","_previous","ManualGesture","ContinousBaseGesture","constructor","handlerName","onChange","callback","handlers"],"mappings":"iqCACA,GAAA,SAAA,CAAA,OAAA,aAAA,CAEA,QAASA,sBAAT,CACEC,OADF,CAEEC,SAFF,CAGE,CACA,SAAA,CACA,MAAOD,QAAP,CACD,CAAA,GAEYE,cAAN,uHAILE,wBAAc,+CACZ,wBAEA,MAAKC,WAAL,CAAmB,sBAAnB,CAAA,aACD,CAAA,kDAEDC,kBACEC,QADM,CAEN,CAEA,IAAA,CAAKC,QAAL,CAAcT,qBAAd,CAAsCA,qBAAtC,CACA,gFAAsBQ,QAAtB,EACD,CAAA,2BAhBgCJ,QAAAA,CAAAA,oBAA5B,E","sourcesContent":["import { GestureUpdateEvent } from '../gestureHandlerCommon';\nimport { ContinousBaseGesture } from './gesture';\n\nfunction changeEventCalculator(\n  current: GestureUpdateEvent<Record<string, never>>,\n  _previous?: GestureUpdateEvent<Record<string, never>>\n) {\n  'worklet';\n  return current;\n}\n\nexport class ManualGesture extends ContinousBaseGesture<\n  Record<string, never>,\n  Record<string, never>\n> {\n  constructor() {\n    super();\n\n    this.handlerName = 'ManualGestureHandler';\n  }\n\n  onChange(\n    callback: (event: GestureUpdateEvent<Record<string, never>>) => void\n  ) {\n    // @ts-ignore TS being overprotective, Record<string, never> is Record\n    this.handlers.changeEventCalculator = changeEventCalculator;\n    return super.onChange(callback);\n  }\n}\n\nexport type ManualGestureType = InstanceType<typeof ManualGesture>;\n"]},"metadata":{},"sourceType":"script"}