{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});Object.defineProperty(exports,\"Directions\",{enumerable:true,get:function get(){return _Directions.Directions;}});Object.defineProperty(exports,\"State\",{enumerable:true,get:function get(){return _State.State;}});Object.defineProperty(exports,\"gestureHandlerRootHOC\",{enumerable:true,get:function get(){return _gestureHandlerRootHOC.default;}});Object.defineProperty(exports,\"GestureHandlerRootView\",{enumerable:true,get:function get(){return _GestureHandlerRootView.default;}});Object.defineProperty(exports,\"TapGestureHandler\",{enumerable:true,get:function get(){return _TapGestureHandler.TapGestureHandler;}});Object.defineProperty(exports,\"ForceTouchGestureHandler\",{enumerable:true,get:function get(){return _ForceTouchGestureHandler.ForceTouchGestureHandler;}});Object.defineProperty(exports,\"LongPressGestureHandler\",{enumerable:true,get:function get(){return _LongPressGestureHandler.LongPressGestureHandler;}});Object.defineProperty(exports,\"PanGestureHandler\",{enumerable:true,get:function get(){return _PanGestureHandler.PanGestureHandler;}});Object.defineProperty(exports,\"PinchGestureHandler\",{enumerable:true,get:function get(){return _PinchGestureHandler.PinchGestureHandler;}});Object.defineProperty(exports,\"RotationGestureHandler\",{enumerable:true,get:function get(){return _RotationGestureHandler.RotationGestureHandler;}});Object.defineProperty(exports,\"FlingGestureHandler\",{enumerable:true,get:function get(){return _FlingGestureHandler.FlingGestureHandler;}});Object.defineProperty(exports,\"createNativeWrapper\",{enumerable:true,get:function get(){return _createNativeWrapper.default;}});Object.defineProperty(exports,\"GestureDetector\",{enumerable:true,get:function get(){return _GestureDetector.GestureDetector;}});Object.defineProperty(exports,\"Gesture\",{enumerable:true,get:function get(){return _gestureObjects.GestureObjects;}});Object.defineProperty(exports,\"NativeViewGestureHandler\",{enumerable:true,get:function get(){return _NativeViewGestureHandler.NativeViewGestureHandler;}});Object.defineProperty(exports,\"RawButton\",{enumerable:true,get:function get(){return _GestureButtons.RawButton;}});Object.defineProperty(exports,\"BaseButton\",{enumerable:true,get:function get(){return _GestureButtons.BaseButton;}});Object.defineProperty(exports,\"RectButton\",{enumerable:true,get:function get(){return _GestureButtons.RectButton;}});Object.defineProperty(exports,\"BorderlessButton\",{enumerable:true,get:function get(){return _GestureButtons.BorderlessButton;}});Object.defineProperty(exports,\"TouchableHighlight\",{enumerable:true,get:function get(){return _touchables.TouchableHighlight;}});Object.defineProperty(exports,\"TouchableNativeFeedback\",{enumerable:true,get:function get(){return _touchables.TouchableNativeFeedback;}});Object.defineProperty(exports,\"TouchableOpacity\",{enumerable:true,get:function get(){return _touchables.TouchableOpacity;}});Object.defineProperty(exports,\"TouchableWithoutFeedback\",{enumerable:true,get:function get(){return _touchables.TouchableWithoutFeedback;}});Object.defineProperty(exports,\"ScrollView\",{enumerable:true,get:function get(){return _GestureComponents.ScrollView;}});Object.defineProperty(exports,\"Switch\",{enumerable:true,get:function get(){return _GestureComponents.Switch;}});Object.defineProperty(exports,\"TextInput\",{enumerable:true,get:function get(){return _GestureComponents.TextInput;}});Object.defineProperty(exports,\"DrawerLayoutAndroid\",{enumerable:true,get:function get(){return _GestureComponents.DrawerLayoutAndroid;}});Object.defineProperty(exports,\"FlatList\",{enumerable:true,get:function get(){return _GestureComponents.FlatList;}});Object.defineProperty(exports,\"Swipeable\",{enumerable:true,get:function get(){return _Swipeable.default;}});Object.defineProperty(exports,\"DrawerLayout\",{enumerable:true,get:function get(){return _DrawerLayout.default;}});var _init=require(\"./init\");var _Directions=require(\"./Directions\");var _State=require(\"./State\");var _gestureHandlerRootHOC=_interopRequireDefault(require(\"./gestureHandlerRootHOC\"));var _GestureHandlerRootView=_interopRequireDefault(require(\"./GestureHandlerRootView\"));var _TapGestureHandler=require(\"./handlers/TapGestureHandler\");var _ForceTouchGestureHandler=require(\"./handlers/ForceTouchGestureHandler\");var _LongPressGestureHandler=require(\"./handlers/LongPressGestureHandler\");var _PanGestureHandler=require(\"./handlers/PanGestureHandler\");var _PinchGestureHandler=require(\"./handlers/PinchGestureHandler\");var _RotationGestureHandler=require(\"./handlers/RotationGestureHandler\");var _FlingGestureHandler=require(\"./handlers/FlingGestureHandler\");var _createNativeWrapper=_interopRequireDefault(require(\"./handlers/createNativeWrapper\"));var _GestureDetector=require(\"./handlers/gestures/GestureDetector\");var _gestureObjects=require(\"./handlers/gestures/gestureObjects\");var _NativeViewGestureHandler=require(\"./handlers/NativeViewGestureHandler\");var _GestureButtons=require(\"./components/GestureButtons\");var _touchables=require(\"./components/touchables\");var _GestureComponents=require(\"./components/GestureComponents\");var _Swipeable=_interopRequireDefault(require(\"./components/Swipeable\"));var _DrawerLayout=_interopRequireDefault(require(\"./components/DrawerLayout\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}(0,_init.initialize)();","map":{"version":3,"sources":["index.ts"],"names":[],"mappings":"80HAAA,GAAA,MAAA,CAAA,OAAA,UAAA,CAEA,GAAA,YAAA,CAAA,OAAA,gBAAA,CACA,GAAA,OAAA,CAAA,OAAA,WAAA,CACA,GAAA,uBAAA,CAAA,sBAAA,CAAA,OAAA,2BAAA,CAAA,CACA,GAAA,wBAAA,CAAA,sBAAA,CAAA,OAAA,4BAAA,CAAA,CA+CA,GAAA,mBAAA,CAAA,OAAA,gCAAA,CACA,GAAA,0BAAA,CAAA,OAAA,uCAAA,CACA,GAAA,yBAAA,CAAA,OAAA,sCAAA,CACA,GAAA,mBAAA,CAAA,OAAA,gCAAA,CACA,GAAA,qBAAA,CAAA,OAAA,kCAAA,CACA,GAAA,wBAAA,CAAA,OAAA,qCAAA,CACA,GAAA,qBAAA,CAAA,OAAA,kCAAA,CACA,GAAA,qBAAA,CAAA,sBAAA,CAAA,OAAA,kCAAA,CAAA,CAKA,GAAA,iBAAA,CAAA,OAAA,uCAAA,CACA,GAAA,gBAAA,CAAA,OAAA,sCAAA,CAiBA,GAAA,0BAAA,CAAA,OAAA,uCAAA,CAOA,GAAA,gBAAA,CAAA,OAAA,+BAAA,CAMA,GAAA,YAAA,CAAA,OAAA,2BAAA,CAMA,GAAA,mBAAA,CAAA,OAAA,kCAAA,CA8CA,GAAA,WAAA,CAAA,sBAAA,CAAA,OAAA,0BAAA,CAAA,CASA,GAAA,cAAA,CAAA,sBAAA,CAAA,OAAA,6BAAA,CAAA,C,mFAEA,CAAA,CAAA,CAAA,KAAA,CAAA,UAAA,GAAA","sourcesContent":["import { initialize } from './init';\n\nexport { Directions } from './Directions';\nexport { State } from './State';\nexport { default as gestureHandlerRootHOC } from './gestureHandlerRootHOC';\nexport { default as GestureHandlerRootView } from './GestureHandlerRootView';\nexport type {\n  // event types\n  GestureEvent,\n  HandlerStateChangeEvent,\n  // event payloads types\n  GestureEventPayload,\n  HandlerStateChangeEventPayload,\n  // pointer events\n  GestureTouchEvent,\n  TouchData,\n  // new api event types\n  GestureUpdateEvent,\n  GestureStateChangeEvent,\n} from './handlers/gestureHandlerCommon';\nexport type { GestureType } from './handlers/gestures/gesture';\nexport type {\n  TapGestureHandlerEventPayload,\n  TapGestureHandlerProps,\n} from './handlers/TapGestureHandler';\nexport type {\n  ForceTouchGestureHandlerEventPayload,\n  ForceTouchGestureHandlerProps,\n} from './handlers/ForceTouchGestureHandler';\nexport type { ForceTouchGestureChangeEventPayload } from './handlers/gestures/forceTouchGesture';\nexport type {\n  LongPressGestureHandlerEventPayload,\n  LongPressGestureHandlerProps,\n} from './handlers/LongPressGestureHandler';\nexport type {\n  PanGestureHandlerEventPayload,\n  PanGestureHandlerProps,\n} from './handlers/PanGestureHandler';\nexport type { PanGestureChangeEventPayload } from './handlers/gestures/panGesture';\nexport type {\n  PinchGestureHandlerEventPayload,\n  PinchGestureHandlerProps,\n} from './handlers/PinchGestureHandler';\nexport type { PinchGestureChangeEventPayload } from './handlers/gestures/pinchGesture';\nexport type {\n  RotationGestureHandlerEventPayload,\n  RotationGestureHandlerProps,\n} from './handlers/RotationGestureHandler';\nexport type {\n  FlingGestureHandlerEventPayload,\n  FlingGestureHandlerProps,\n} from './handlers/FlingGestureHandler';\nexport { TapGestureHandler } from './handlers/TapGestureHandler';\nexport { ForceTouchGestureHandler } from './handlers/ForceTouchGestureHandler';\nexport { LongPressGestureHandler } from './handlers/LongPressGestureHandler';\nexport { PanGestureHandler } from './handlers/PanGestureHandler';\nexport { PinchGestureHandler } from './handlers/PinchGestureHandler';\nexport { RotationGestureHandler } from './handlers/RotationGestureHandler';\nexport { FlingGestureHandler } from './handlers/FlingGestureHandler';\nexport { default as createNativeWrapper } from './handlers/createNativeWrapper';\nexport type {\n  NativeViewGestureHandlerPayload,\n  NativeViewGestureHandlerProps,\n} from './handlers/NativeViewGestureHandler';\nexport { GestureDetector } from './handlers/gestures/GestureDetector';\nexport { GestureObjects as Gesture } from './handlers/gestures/gestureObjects';\nexport type { TapGestureType as TapGesture } from './handlers/gestures/tapGesture';\nexport type { PanGestureType as PanGesture } from './handlers/gestures/panGesture';\nexport type { FlingGestureType as FlingGesture } from './handlers/gestures/flingGesture';\nexport type { LongPressGestureType as LongPressGesture } from './handlers/gestures/longPressGesture';\nexport type { PinchGestureType as PinchGesture } from './handlers/gestures/pinchGesture';\nexport type { RotationGestureType as RotationGesture } from './handlers/gestures/rotationGesture';\nexport type { ForceTouchGestureType as ForceTouchGesture } from './handlers/gestures/forceTouchGesture';\nexport type { NativeGestureType as NativeGesture } from './handlers/gestures/nativeGesture';\nexport type { ManualGestureType as ManualGesture } from './handlers/gestures/manualGesture';\nexport type {\n  ComposedGestureType as ComposedGesture,\n  RaceGestureType as RaceGesture,\n  SimultaneousGestureType as SimultaneousGesture,\n  ExclusiveGestureType as ExclusiveGesture,\n} from './handlers/gestures/gestureComposition';\nexport type { GestureStateManagerType as GestureStateManager } from './handlers/gestures/gestureStateManager';\nexport { NativeViewGestureHandler } from './handlers/NativeViewGestureHandler';\nexport type {\n  RawButtonProps,\n  BaseButtonProps,\n  RectButtonProps,\n  BorderlessButtonProps,\n} from './components/GestureButtons';\nexport {\n  RawButton,\n  BaseButton,\n  RectButton,\n  BorderlessButton,\n} from './components/GestureButtons';\nexport {\n  TouchableHighlight,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n} from './components/touchables';\nexport {\n  ScrollView,\n  Switch,\n  TextInput,\n  DrawerLayoutAndroid,\n  FlatList,\n} from './components/GestureComponents';\nexport type {\n  //events\n  GestureHandlerGestureEvent,\n  GestureHandlerStateChangeEvent,\n  //event payloads\n  GestureHandlerGestureEventNativeEvent,\n  GestureHandlerStateChangeNativeEvent,\n  NativeViewGestureHandlerGestureEvent,\n  NativeViewGestureHandlerStateChangeEvent,\n  TapGestureHandlerGestureEvent,\n  TapGestureHandlerStateChangeEvent,\n  ForceTouchGestureHandlerGestureEvent,\n  ForceTouchGestureHandlerStateChangeEvent,\n  LongPressGestureHandlerGestureEvent,\n  LongPressGestureHandlerStateChangeEvent,\n  PanGestureHandlerGestureEvent,\n  PanGestureHandlerStateChangeEvent,\n  PinchGestureHandlerGestureEvent,\n  PinchGestureHandlerStateChangeEvent,\n  RotationGestureHandlerGestureEvent,\n  RotationGestureHandlerStateChangeEvent,\n  FlingGestureHandlerGestureEvent,\n  FlingGestureHandlerStateChangeEvent,\n  // handlers props\n  NativeViewGestureHandlerProperties,\n  TapGestureHandlerProperties,\n  LongPressGestureHandlerProperties,\n  PanGestureHandlerProperties,\n  PinchGestureHandlerProperties,\n  RotationGestureHandlerProperties,\n  FlingGestureHandlerProperties,\n  ForceTouchGestureHandlerProperties,\n  // buttons props\n  RawButtonProperties,\n  BaseButtonProperties,\n  RectButtonProperties,\n  BorderlessButtonProperties,\n} from './handlers/gestureHandlerTypesCompat';\n\nexport { default as Swipeable } from './components/Swipeable';\nexport type {\n  DrawerLayoutProps,\n  DrawerPosition,\n  DrawerState,\n  DrawerType,\n  DrawerLockMode,\n  DrawerKeyboardDismissMode,\n} from './components/DrawerLayout';\nexport { default as DrawerLayout } from './components/DrawerLayout';\n\ninitialize();\n"]},"metadata":{},"sourceType":"script"}