{"ast":null,"code":"\"use strict\";var _classCallCheck=require(\"@babel/runtime/helpers/classCallCheck\");var _createClass=require(\"@babel/runtime/helpers/createClass\");var _assertThisInitialized=require(\"@babel/runtime/helpers/assertThisInitialized\");var _inherits=require(\"@babel/runtime/helpers/inherits\");var _possibleConstructorReturn=require(\"@babel/runtime/helpers/possibleConstructorReturn\");var _getPrototypeOf=require(\"@babel/runtime/helpers/getPrototypeOf\");function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=exports.TOUCHABLE_STATE=void 0;var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _State=require(\"../../State\");var _GestureButtons=require(\"../GestureButtons\");function _getRequireWildcardCache(){if(typeof WeakMap!==\"function\")return null;var cache=new WeakMap();_getRequireWildcardCache=function _getRequireWildcardCache(){return cache;};return cache;}function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!==\"object\"&&typeof obj!==\"function\"){return{default:obj};}var cache=_getRequireWildcardCache();if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var TOUCHABLE_STATE={UNDETERMINED:0,BEGAN:1,MOVED_OUTSIDE:2};exports.TOUCHABLE_STATE=TOUCHABLE_STATE;var GenericTouchable=function(_React$Component){_inherits(GenericTouchable,_React$Component);var _super=_createSuper(GenericTouchable);function GenericTouchable(){var _this;_classCallCheck(this,GenericTouchable);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_defineProperty(_assertThisInitialized(_this),\"pressInTimeout\",void 0);_defineProperty(_assertThisInitialized(_this),\"pressOutTimeout\",void 0);_defineProperty(_assertThisInitialized(_this),\"longPressTimeout\",void 0);_defineProperty(_assertThisInitialized(_this),\"longPressDetected\",false);_defineProperty(_assertThisInitialized(_this),\"pointerInside\",true);_defineProperty(_assertThisInitialized(_this),\"STATE\",TOUCHABLE_STATE.UNDETERMINED);_defineProperty(_assertThisInitialized(_this),\"onGestureEvent\",function(_ref){var pointerInside=_ref.nativeEvent.pointerInside;if(_this.pointerInside!==pointerInside){if(pointerInside){_this.onMoveIn();}else{_this.onMoveOut();}}_this.pointerInside=pointerInside;});_defineProperty(_assertThisInitialized(_this),\"onHandlerStateChange\",function(_ref2){var nativeEvent=_ref2.nativeEvent;var state=nativeEvent.state;if(state===_State.State.CANCELLED||state===_State.State.FAILED){_this.moveToState(TOUCHABLE_STATE.UNDETERMINED);}else if(state===(_reactNative.Platform.OS!=='android'?_State.State.ACTIVE:_State.State.BEGAN)&&_this.STATE===TOUCHABLE_STATE.UNDETERMINED){_this.handlePressIn();}else if(state===_State.State.END){var shouldCallOnPress=!_this.longPressDetected&&_this.STATE!==TOUCHABLE_STATE.MOVED_OUTSIDE&&_this.pressOutTimeout===null;_this.handleGoToUndetermined();if(shouldCallOnPress){var _this$props$onPress,_this$props;(_this$props$onPress=(_this$props=_this.props).onPress)===null||_this$props$onPress===void 0?void 0:_this$props$onPress.call(_this$props);}}});_defineProperty(_assertThisInitialized(_this),\"onLongPressDetected\",function(){var _this$props$onLongPre,_this$props2;_this.longPressDetected=true;(_this$props$onLongPre=(_this$props2=_this.props).onLongPress)===null||_this$props$onLongPre===void 0?void 0:_this$props$onLongPre.call(_this$props2);});return _this;}_createClass(GenericTouchable,[{key:\"handlePressIn\",value:function handlePressIn(){var _this2=this;if(this.props.delayPressIn){this.pressInTimeout=setTimeout(function(){_this2.moveToState(TOUCHABLE_STATE.BEGAN);_this2.pressInTimeout=null;},this.props.delayPressIn);}else{this.moveToState(TOUCHABLE_STATE.BEGAN);}if(this.props.onLongPress){var time=(this.props.delayPressIn||0)+(this.props.delayLongPress||0);this.longPressTimeout=setTimeout(this.onLongPressDetected,time);}}},{key:\"handleMoveOutside\",value:function handleMoveOutside(){var _this3=this;if(this.props.delayPressOut){this.pressOutTimeout=this.pressOutTimeout||setTimeout(function(){_this3.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);_this3.pressOutTimeout=null;},this.props.delayPressOut);}else{this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);}}},{key:\"handleGoToUndetermined\",value:function handleGoToUndetermined(){var _this4=this;clearTimeout(this.pressOutTimeout);if(this.props.delayPressOut){this.pressOutTimeout=setTimeout(function(){if(_this4.STATE===TOUCHABLE_STATE.UNDETERMINED){_this4.moveToState(TOUCHABLE_STATE.BEGAN);}_this4.moveToState(TOUCHABLE_STATE.UNDETERMINED);_this4.pressOutTimeout=null;},this.props.delayPressOut);}else{if(this.STATE===TOUCHABLE_STATE.UNDETERMINED){this.moveToState(TOUCHABLE_STATE.BEGAN);}this.moveToState(TOUCHABLE_STATE.UNDETERMINED);}}},{key:\"componentDidMount\",value:function componentDidMount(){this.reset();}},{key:\"reset\",value:function reset(){this.longPressDetected=false;this.pointerInside=true;clearTimeout(this.pressInTimeout);clearTimeout(this.pressOutTimeout);clearTimeout(this.longPressTimeout);this.pressOutTimeout=null;this.longPressTimeout=null;this.pressInTimeout=null;}},{key:\"moveToState\",value:function moveToState(newState){var _this$props$onStateCh,_this$props6;if(newState===this.STATE){return;}if(newState===TOUCHABLE_STATE.BEGAN){var _this$props$onPressIn,_this$props3;(_this$props$onPressIn=(_this$props3=this.props).onPressIn)===null||_this$props$onPressIn===void 0?void 0:_this$props$onPressIn.call(_this$props3);}else if(newState===TOUCHABLE_STATE.MOVED_OUTSIDE){var _this$props$onPressOu,_this$props4;(_this$props$onPressOu=(_this$props4=this.props).onPressOut)===null||_this$props$onPressOu===void 0?void 0:_this$props$onPressOu.call(_this$props4);}else if(newState===TOUCHABLE_STATE.UNDETERMINED){this.reset();if(this.STATE===TOUCHABLE_STATE.BEGAN){var _this$props$onPressOu2,_this$props5;(_this$props$onPressOu2=(_this$props5=this.props).onPressOut)===null||_this$props$onPressOu2===void 0?void 0:_this$props$onPressOu2.call(_this$props5);}}(_this$props$onStateCh=(_this$props6=this.props).onStateChange)===null||_this$props$onStateCh===void 0?void 0:_this$props$onStateCh.call(_this$props6,this.STATE,newState);this.STATE=newState;}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.reset();}},{key:\"onMoveIn\",value:function onMoveIn(){if(this.STATE===TOUCHABLE_STATE.MOVED_OUTSIDE){this.moveToState(TOUCHABLE_STATE.BEGAN);}}},{key:\"onMoveOut\",value:function onMoveOut(){clearTimeout(this.longPressTimeout);this.longPressTimeout=null;if(this.STATE===TOUCHABLE_STATE.BEGAN){this.handleMoveOutside();}}},{key:\"render\",value:function render(){var _this$props$touchSoun;var coreProps={accessible:this.props.accessible!==false,accessibilityLabel:this.props.accessibilityLabel,accessibilityHint:this.props.accessibilityHint,accessibilityRole:this.props.accessibilityRole,accessibilityState:this.props.accessibilityState,accessibilityActions:this.props.accessibilityActions,onAccessibilityAction:this.props.onAccessibilityAction,nativeID:this.props.nativeID,onLayout:this.props.onLayout,hitSlop:this.props.hitSlop};return React.createElement(_GestureButtons.BaseButton,_extends({style:this.props.containerStyle,onHandlerStateChange:this.props.disabled?undefined:this.onHandlerStateChange,onGestureEvent:this.onGestureEvent,hitSlop:this.props.hitSlop,shouldActivateOnStart:this.props.shouldActivateOnStart,disallowInterruption:this.props.disallowInterruption,testID:this.props.testID,touchSoundDisabled:(_this$props$touchSoun=this.props.touchSoundDisabled)!==null&&_this$props$touchSoun!==void 0?_this$props$touchSoun:false},this.props.extraButtonProps),React.createElement(_reactNative.Animated.View,_extends({},coreProps,{style:this.props.style}),this.props.children));}}]);return GenericTouchable;}(React.Component);exports.default=GenericTouchable;_defineProperty(GenericTouchable,\"defaultProps\",{delayLongPress:600,extraButtonProps:{rippleColor:'transparent',exclusive:true}});","map":{"version":3,"sources":["GenericTouchable.tsx"],"names":["TOUCHABLE_STATE","UNDETERMINED","BEGAN","MOVED_OUTSIDE","GenericTouchable","Component","delayLongPress","extraButtonProps","rippleColor","exclusive","handlePressIn","props","delayPressIn","pressInTimeout","setTimeout","moveToState","onLongPress","time","longPressTimeout","onLongPressDetected","handleMoveOutside","delayPressOut","pressOutTimeout","handleGoToUndetermined","clearTimeout","STATE","componentDidMount","reset","longPressDetected","pointerInside","newState","onPressIn","onPressOut","onStateChange","nativeEvent","onMoveIn","onMoveOut","state","State","CANCELLED","FAILED","Platform","OS","ACTIVE","END","shouldCallOnPress","onPress","componentWillUnmount","render","coreProps","accessible","accessibilityLabel","accessibilityHint","accessibilityRole","accessibilityState","accessibilityActions","onAccessibilityAction","nativeID","onLayout","hitSlop","containerStyle","disabled","undefined","onHandlerStateChange","onGestureEvent","shouldActivateOnStart","disallowInterruption","testID","touchSoundDisabled","style","children"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Component } from 'react';\nimport {\n  Animated,\n  Platform,\n  StyleProp,\n  ViewStyle,\n  TouchableWithoutFeedbackProps,\n} from 'react-native';\n\nimport { State } from '../../State';\nimport { BaseButton } from '../GestureButtons';\n\nimport {\n  GestureEvent,\n  HandlerStateChangeEvent,\n} from '../../handlers/gestureHandlerCommon';\nimport { NativeViewGestureHandlerPayload } from '../../handlers/NativeViewGestureHandler';\nimport { TouchableNativeFeedbackExtraProps } from './TouchableNativeFeedback.android';\n\n/**\n * Each touchable is a states' machine which preforms transitions.\n * On very beginning (and on the very end or recognition) touchable is\n * UNDETERMINED. Then it moves to BEGAN. If touchable recognizes that finger\n * travel outside it transits to special MOVED_OUTSIDE state. Gesture recognition\n * finishes in UNDETERMINED state.\n */\nexport const TOUCHABLE_STATE = {\n  UNDETERMINED: 0,\n  BEGAN: 1,\n  MOVED_OUTSIDE: 2,\n} as const;\n\ntype TouchableState = typeof TOUCHABLE_STATE[keyof typeof TOUCHABLE_STATE];\n\nexport interface GenericTouchableProps extends TouchableWithoutFeedbackProps {\n  // Decided to drop not used fields from RN's implementation.\n  // e.g. onBlur and onFocus as well as deprecated props. - TODO: this comment may be unuseful in this moment\n\n  // TODO: in RN these events get native event parameter, which prolly could be used in our implementation too\n  onPress?: () => void;\n  onPressIn?: () => void;\n  onPressOut?: () => void;\n  onLongPress?: () => void;\n\n  nativeID?: string;\n  shouldActivateOnStart?: boolean;\n  disallowInterruption?: boolean;\n\n  containerStyle?: StyleProp<ViewStyle>;\n}\n\ninterface InternalProps {\n  extraButtonProps: TouchableNativeFeedbackExtraProps;\n  onStateChange?: (oldState: TouchableState, newState: TouchableState) => void;\n}\n\n// TODO: maybe can be better\n// TODO: all clearTimeout have ! added, maybe they shouldn't ?\ntype Timeout = ReturnType<typeof setTimeout> | null | undefined;\n\n/**\n * GenericTouchable is not intented to be used as it is.\n * Should be treated as a source for the rest of touchables\n */\n\nexport default class GenericTouchable extends Component<\n  GenericTouchableProps & InternalProps\n> {\n  static defaultProps = {\n    delayLongPress: 600,\n    extraButtonProps: {\n      rippleColor: 'transparent',\n      exclusive: true,\n    },\n  };\n\n  // timeout handlers\n  pressInTimeout: Timeout;\n  pressOutTimeout: Timeout;\n  longPressTimeout: Timeout;\n\n  // This flag is required since recognition of longPress implies not-invoking onPress\n  longPressDetected = false;\n\n  pointerInside = true;\n\n  // State of touchable\n  STATE: TouchableState = TOUCHABLE_STATE.UNDETERMINED;\n\n  // handlePressIn in called on first touch on traveling inside component.\n  // Handles state transition with delay.\n  handlePressIn() {\n    if (this.props.delayPressIn) {\n      this.pressInTimeout = setTimeout(() => {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n        this.pressInTimeout = null;\n      }, this.props.delayPressIn);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n    if (this.props.onLongPress) {\n      const time =\n        (this.props.delayPressIn || 0) + (this.props.delayLongPress || 0);\n      this.longPressTimeout = setTimeout(this.onLongPressDetected, time);\n    }\n  }\n  // handleMoveOutside in called on traveling outside component.\n  // Handles state transition with delay.\n  handleMoveOutside() {\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout =\n        this.pressOutTimeout ||\n        setTimeout(() => {\n          this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n          this.pressOutTimeout = null;\n        }, this.props.delayPressOut);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n    }\n  }\n\n  // handleGoToUndetermined transits to UNDETERMINED state with proper delay\n  handleGoToUndetermined() {\n    clearTimeout(this.pressOutTimeout!); // TODO: maybe it can be undefined\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout = setTimeout(() => {\n        if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n          this.moveToState(TOUCHABLE_STATE.BEGAN);\n        }\n        this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n        this.pressOutTimeout = null;\n      }, this.props.delayPressOut);\n    } else {\n      if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n      }\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    }\n  }\n\n  componentDidMount() {\n    this.reset();\n  }\n  // reset timeout to prevent memory leaks.\n  reset() {\n    this.longPressDetected = false;\n    this.pointerInside = true;\n    clearTimeout(this.pressInTimeout!);\n    clearTimeout(this.pressOutTimeout!);\n    clearTimeout(this.longPressTimeout!);\n    this.pressOutTimeout = null;\n    this.longPressTimeout = null;\n    this.pressInTimeout = null;\n  }\n\n  // All states' transitions are defined here.\n  moveToState(newState: TouchableState) {\n    if (newState === this.STATE) {\n      // Ignore dummy transitions\n      return;\n    }\n    if (newState === TOUCHABLE_STATE.BEGAN) {\n      // First touch and moving inside\n      this.props.onPressIn?.();\n    } else if (newState === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // Moving outside\n      this.props.onPressOut?.();\n    } else if (newState === TOUCHABLE_STATE.UNDETERMINED) {\n      // Need to reset each time on transition to UNDETERMINED\n      this.reset();\n      if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n        // ... and if it happens inside button.\n        this.props.onPressOut?.();\n      }\n    }\n    // Finally call lister (used by subclasses)\n    this.props.onStateChange?.(this.STATE, newState);\n    // ... and make transition.\n    this.STATE = newState;\n  }\n\n  onGestureEvent = ({\n    nativeEvent: { pointerInside },\n  }: GestureEvent<NativeViewGestureHandlerPayload>) => {\n    if (this.pointerInside !== pointerInside) {\n      if (pointerInside) {\n        this.onMoveIn();\n      } else {\n        this.onMoveOut();\n      }\n    }\n    this.pointerInside = pointerInside;\n  };\n\n  onHandlerStateChange = ({\n    nativeEvent,\n  }: HandlerStateChangeEvent<NativeViewGestureHandlerPayload>) => {\n    const { state } = nativeEvent;\n    if (state === State.CANCELLED || state === State.FAILED) {\n      // Need to handle case with external cancellation (e.g. by ScrollView)\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    } else if (\n      // This platform check is an implication of slightly different behavior of handlers on different platform.\n      // And Android \"Active\" state is achieving on first move of a finger, not on press in.\n      // On iOS event on \"Began\" is not delivered.\n      state === (Platform.OS !== 'android' ? State.ACTIVE : State.BEGAN) &&\n      this.STATE === TOUCHABLE_STATE.UNDETERMINED\n    ) {\n      // Moving inside requires\n      this.handlePressIn();\n    } else if (state === State.END) {\n      const shouldCallOnPress =\n        !this.longPressDetected &&\n        this.STATE !== TOUCHABLE_STATE.MOVED_OUTSIDE &&\n        this.pressOutTimeout === null;\n      this.handleGoToUndetermined();\n      if (shouldCallOnPress) {\n        // Calls only inside component whether no long press was called previously\n        this.props.onPress?.();\n      }\n    }\n  };\n\n  onLongPressDetected = () => {\n    this.longPressDetected = true;\n    // checked for in the caller of `onLongPressDetected`, but better to check twice\n    this.props.onLongPress?.();\n  };\n\n  componentWillUnmount() {\n    // to prevent memory leaks\n    this.reset();\n  }\n\n  onMoveIn() {\n    if (this.STATE === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // This call is not throttled with delays (like in RN's implementation).\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n  }\n\n  onMoveOut() {\n    // long press should no longer be detected\n    clearTimeout(this.longPressTimeout!);\n    this.longPressTimeout = null;\n    if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n      this.handleMoveOutside();\n    }\n  }\n\n  render() {\n    const coreProps = {\n      accessible: this.props.accessible !== false,\n      accessibilityLabel: this.props.accessibilityLabel,\n      accessibilityHint: this.props.accessibilityHint,\n      accessibilityRole: this.props.accessibilityRole,\n      // TODO: check if changed to no 's' correctly, also removed 2 props that are no longer available: `accessibilityComponentType` and `accessibilityTraits`,\n      // would be good to check if it is ok for sure, see: https://github.com/facebook/react-native/issues/24016\n      accessibilityState: this.props.accessibilityState,\n      accessibilityActions: this.props.accessibilityActions,\n      onAccessibilityAction: this.props.onAccessibilityAction,\n      nativeID: this.props.nativeID,\n      onLayout: this.props.onLayout,\n      hitSlop: this.props.hitSlop,\n    };\n\n    return (\n      <BaseButton\n        style={this.props.containerStyle}\n        onHandlerStateChange={\n          // TODO: not sure if it can be undefined instead of null\n          this.props.disabled ? undefined : this.onHandlerStateChange\n        }\n        onGestureEvent={this.onGestureEvent}\n        hitSlop={this.props.hitSlop}\n        shouldActivateOnStart={this.props.shouldActivateOnStart}\n        disallowInterruption={this.props.disallowInterruption}\n        testID={this.props.testID}\n        touchSoundDisabled={this.props.touchSoundDisabled ?? false}\n        {...this.props.extraButtonProps}>\n        <Animated.View {...coreProps} style={this.props.style}>\n          {this.props.children}\n        </Animated.View>\n      </BaseButton>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}