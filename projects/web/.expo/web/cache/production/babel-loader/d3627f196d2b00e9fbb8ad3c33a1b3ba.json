{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{lessThan,multiply,sub,add,divide,greaterThan,lessOrEq,eq}from\"../operators\";import invariant from'invariant';import AnimatedNode from\"../core/AnimatedNode\";import{createAnimatedCond as cond}from\"../core/AnimatedCond\";import{createAnimatedFunction as proc}from\"../core/AnimatedFunction\";var interpolateInternalSingleProc=proc(function(value,inS,inE,outS,outE){var progress=divide(sub(value,inS),sub(inE,inS));var resultForNonZeroRange=add(outS,multiply(progress,sub(outE,outS)));var result=cond(eq(inS,inE),cond(lessOrEq(value,inS),outS,outE),resultForNonZeroRange);return result;});function interpolateInternalSingle(value,inputRange,outputRange,offset){var inS=inputRange[offset];var inE=inputRange[offset+1];var outS=outputRange[offset];var outE=outputRange[offset+1];return interpolateInternalSingleProc(value,inS,inE,outS,outE);}function interpolateInternal(value,inputRange,outputRange){var offset=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0;if(inputRange.length-offset===2){return interpolateInternalSingle(value,inputRange,outputRange,offset);}return cond(lessThan(value,inputRange[offset+1]),interpolateInternalSingle(value,inputRange,outputRange,offset),interpolateInternal(value,inputRange,outputRange,offset+1));}export var Extrapolate={EXTEND:'extend',CLAMP:'clamp',IDENTITY:'identity'};function checkNonDecreasing(name,arr){for(var i=1;i<arr.length;++i){if(arr[i]instanceof AnimatedNode||arr[i-1]instanceof AnimatedNode)continue;invariant(arr[i]>=arr[i-1],'%s must be monotonically non-decreasing. (%s)',name,arr);}}function checkMinElements(name,arr){invariant(arr.length>=2,'%s must have at least 2 elements. (%s)',name,arr);}function checkValidNumbers(name,arr){for(var i=0;i<arr.length;i++){if(arr[i]instanceof AnimatedNode||typeof arr[i]!=='number')continue;invariant(Number.isFinite(arr[i]),'%s cannot include %s. (%s)',name,arr[i],arr);}}function convertToRadians(outputRange){for(var _ref of outputRange.entries()){var _ref2=_slicedToArray(_ref,2);var i=_ref2[0];var value=_ref2[1];if(typeof value==='string'&&value.endsWith('deg')){outputRange[i]=parseFloat(value)*(Math.PI/180);}else if(typeof value==='string'&&value.endsWith('rad')){outputRange[i]=parseFloat(value);}}}export default function interpolate(value,config){var inputRange=config.inputRange,outputRange=config.outputRange,_config$extrapolate=config.extrapolate,extrapolate=_config$extrapolate===void 0?Extrapolate.EXTEND:_config$extrapolate,extrapolateLeft=config.extrapolateLeft,extrapolateRight=config.extrapolateRight;checkMinElements('inputRange',inputRange);checkValidNumbers('inputRange',inputRange);checkMinElements('outputRange',outputRange);checkValidNumbers('outputRange',outputRange);checkNonDecreasing('inputRange',inputRange);invariant(inputRange.length===outputRange.length,'inputRange and outputRange must be the same length.');convertToRadians(outputRange);var left=extrapolateLeft||extrapolate;var right=extrapolateRight||extrapolate;var output=interpolateInternal(value,inputRange,outputRange);if(left===Extrapolate.CLAMP){output=cond(lessThan(value,inputRange[0]),outputRange[0],output);}else if(left===Extrapolate.IDENTITY){output=cond(lessThan(value,inputRange[0]),value,output);}if(right===Extrapolate.CLAMP){output=cond(greaterThan(value,inputRange[inputRange.length-1]),outputRange[outputRange.length-1],output);}else if(right===Extrapolate.IDENTITY){output=cond(greaterThan(value,inputRange[inputRange.length-1]),value,output);}return output;}","map":{"version":3,"names":["lessThan","multiply","sub","add","divide","greaterThan","lessOrEq","eq","invariant","AnimatedNode","createAnimatedCond","cond","createAnimatedFunction","proc","interpolateInternalSingleProc","value","inS","inE","outS","outE","progress","resultForNonZeroRange","result","interpolateInternalSingle","inputRange","outputRange","offset","interpolateInternal","length","Extrapolate","EXTEND","CLAMP","IDENTITY","checkNonDecreasing","name","arr","i","checkMinElements","checkValidNumbers","Number","isFinite","convertToRadians","entries","endsWith","parseFloat","Math","PI","interpolate","config","extrapolate","extrapolateLeft","extrapolateRight","left","right","output"],"sources":["/Users/pg328/Projects/friendzone/node_modules/react-native-reanimated/lib/reanimated1/derived/interpolate.js"],"sourcesContent":["import {\n  lessThan,\n  multiply,\n  sub,\n  add,\n  divide,\n  greaterThan,\n  lessOrEq,\n  eq,\n} from '../operators';\nimport invariant from 'invariant';\n\nimport AnimatedNode from '../core/AnimatedNode';\nimport { createAnimatedCond as cond } from '../core/AnimatedCond';\nimport { createAnimatedFunction as proc } from '../core/AnimatedFunction';\n\nconst interpolateInternalSingleProc = proc(function (\n  value,\n  inS,\n  inE,\n  outS,\n  outE\n) {\n  const progress = divide(sub(value, inS), sub(inE, inS));\n  // logic below was made in order to provide a compatibility witn an Animated API\n  const resultForNonZeroRange = add(outS, multiply(progress, sub(outE, outS)));\n  const result = cond(\n    eq(inS, inE),\n    cond(lessOrEq(value, inS), outS, outE),\n    resultForNonZeroRange\n  );\n  return result;\n});\n\nfunction interpolateInternalSingle(value, inputRange, outputRange, offset) {\n  const inS = inputRange[offset];\n  const inE = inputRange[offset + 1];\n  const outS = outputRange[offset];\n  const outE = outputRange[offset + 1];\n  return interpolateInternalSingleProc(value, inS, inE, outS, outE);\n}\n\nfunction interpolateInternal(value, inputRange, outputRange, offset = 0) {\n  if (inputRange.length - offset === 2) {\n    return interpolateInternalSingle(value, inputRange, outputRange, offset);\n  }\n  return cond(\n    lessThan(value, inputRange[offset + 1]),\n    interpolateInternalSingle(value, inputRange, outputRange, offset),\n    interpolateInternal(value, inputRange, outputRange, offset + 1)\n  );\n}\n\nexport const Extrapolate = {\n  EXTEND: 'extend',\n  CLAMP: 'clamp',\n  IDENTITY: 'identity',\n};\n\nfunction checkNonDecreasing(name, arr) {\n  for (let i = 1; i < arr.length; ++i) {\n    // We can't validate animated nodes in JS.\n    if (arr[i] instanceof AnimatedNode || arr[i - 1] instanceof AnimatedNode)\n      continue;\n    invariant(\n      arr[i] >= arr[i - 1],\n      '%s must be monotonically non-decreasing. (%s)',\n      name,\n      arr\n    );\n  }\n}\n\nfunction checkMinElements(name, arr) {\n  invariant(\n    arr.length >= 2,\n    '%s must have at least 2 elements. (%s)',\n    name,\n    arr\n  );\n}\n\nfunction checkValidNumbers(name, arr) {\n  for (let i = 0; i < arr.length; i++) {\n    // We can't validate animated nodes in JS.\n    if (arr[i] instanceof AnimatedNode || typeof arr[i] !== 'number') continue;\n    invariant(\n      Number.isFinite(arr[i]),\n      '%s cannot include %s. (%s)',\n      name,\n      arr[i],\n      arr\n    );\n  }\n}\n\nfunction convertToRadians(outputRange) {\n  for (const [i, value] of outputRange.entries()) {\n    if (typeof value === 'string' && value.endsWith('deg')) {\n      outputRange[i] = parseFloat(value) * (Math.PI / 180);\n    } else if (typeof value === 'string' && value.endsWith('rad')) {\n      outputRange[i] = parseFloat(value);\n    }\n  }\n}\n\nexport default function interpolate(value, config) {\n  const {\n    inputRange,\n    outputRange,\n    extrapolate = Extrapolate.EXTEND,\n    extrapolateLeft,\n    extrapolateRight,\n  } = config;\n\n  checkMinElements('inputRange', inputRange);\n  checkValidNumbers('inputRange', inputRange);\n  checkMinElements('outputRange', outputRange);\n  checkValidNumbers('outputRange', outputRange);\n  checkNonDecreasing('inputRange', inputRange);\n  invariant(\n    inputRange.length === outputRange.length,\n    'inputRange and outputRange must be the same length.'\n  );\n\n  convertToRadians(outputRange);\n  const left = extrapolateLeft || extrapolate;\n  const right = extrapolateRight || extrapolate;\n  let output = interpolateInternal(value, inputRange, outputRange);\n\n  if (left === Extrapolate.CLAMP) {\n    output = cond(lessThan(value, inputRange[0]), outputRange[0], output);\n  } else if (left === Extrapolate.IDENTITY) {\n    output = cond(lessThan(value, inputRange[0]), value, output);\n  }\n\n  if (right === Extrapolate.CLAMP) {\n    output = cond(\n      greaterThan(value, inputRange[inputRange.length - 1]),\n      outputRange[outputRange.length - 1],\n      output\n    );\n  } else if (right === Extrapolate.IDENTITY) {\n    output = cond(\n      greaterThan(value, inputRange[inputRange.length - 1]),\n      value,\n      output\n    );\n  }\n\n  return output;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}