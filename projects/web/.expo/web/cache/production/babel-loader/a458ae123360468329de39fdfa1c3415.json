{"ast":null,"code":"\"use strict\";var _defineProperty2=require(\"@babel/runtime/helpers/defineProperty\");var _classCallCheck=require(\"@babel/runtime/helpers/classCallCheck\");var _createClass=require(\"@babel/runtime/helpers/createClass\");var _assertThisInitialized=require(\"@babel/runtime/helpers/assertThisInitialized\");var _inherits=require(\"@babel/runtime/helpers/inherits\");var _possibleConstructorReturn=require(\"@babel/runtime/helpers/possibleConstructorReturn\");var _getPrototypeOf=require(\"@babel/runtime/helpers/getPrototypeOf\");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty2(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var React=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native-web/dist/index\");var _PanGestureHandler=require(\"../handlers/PanGestureHandler\");var _TapGestureHandler=require(\"../handlers/TapGestureHandler\");var _State=require(\"../State\");function _getRequireWildcardCache(){if(typeof WeakMap!==\"function\")return null;var cache=new WeakMap();_getRequireWildcardCache=function _getRequireWildcardCache(){return cache;};return cache;}function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!==\"object\"&&typeof obj!==\"function\"){return{default:obj};}var cache=_getRequireWildcardCache();if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var DRAG_TOSS=0.05;var Swipeable=function(_React$Component){_inherits(Swipeable,_React$Component);var _super=_createSuper(Swipeable);function Swipeable(_props){var _this;_classCallCheck(this,Swipeable);_this=_super.call(this,_props);_defineProperty(_assertThisInitialized(_this),\"onGestureEvent\",void 0);_defineProperty(_assertThisInitialized(_this),\"transX\",void 0);_defineProperty(_assertThisInitialized(_this),\"showLeftAction\",void 0);_defineProperty(_assertThisInitialized(_this),\"leftActionTranslate\",void 0);_defineProperty(_assertThisInitialized(_this),\"showRightAction\",void 0);_defineProperty(_assertThisInitialized(_this),\"rightActionTranslate\",void 0);_defineProperty(_assertThisInitialized(_this),\"updateAnimatedEvent\",function(props,state){var friction=props.friction,overshootFriction=props.overshootFriction;var dragX=state.dragX,rowTranslation=state.rowTranslation,_state$leftWidth=state.leftWidth,leftWidth=_state$leftWidth===void 0?0:_state$leftWidth,_state$rowWidth=state.rowWidth,rowWidth=_state$rowWidth===void 0?0:_state$rowWidth;var _state$rightOffset=state.rightOffset,rightOffset=_state$rightOffset===void 0?rowWidth:_state$rightOffset;var rightWidth=Math.max(0,rowWidth-rightOffset);var _props$overshootLeft=props.overshootLeft,overshootLeft=_props$overshootLeft===void 0?leftWidth>0:_props$overshootLeft,_props$overshootRight=props.overshootRight,overshootRight=_props$overshootRight===void 0?rightWidth>0:_props$overshootRight;var transX=_reactNative.Animated.add(rowTranslation,dragX.interpolate({inputRange:[0,friction],outputRange:[0,1]})).interpolate({inputRange:[-rightWidth-1,-rightWidth,leftWidth,leftWidth+1],outputRange:[-rightWidth-(overshootRight?1/overshootFriction:0),-rightWidth,leftWidth,leftWidth+(overshootLeft?1/overshootFriction:0)]});_this.transX=transX;_this.showLeftAction=leftWidth>0?transX.interpolate({inputRange:[-1,0,leftWidth],outputRange:[0,0,1]}):new _reactNative.Animated.Value(0);_this.leftActionTranslate=_this.showLeftAction.interpolate({inputRange:[0,Number.MIN_VALUE],outputRange:[-10000,0],extrapolate:'clamp'});_this.showRightAction=rightWidth>0?transX.interpolate({inputRange:[-rightWidth,0,1],outputRange:[1,0,0]}):new _reactNative.Animated.Value(0);_this.rightActionTranslate=_this.showRightAction.interpolate({inputRange:[0,Number.MIN_VALUE],outputRange:[-10000,0],extrapolate:'clamp'});});_defineProperty(_assertThisInitialized(_this),\"onTapHandlerStateChange\",function(_ref){var nativeEvent=_ref.nativeEvent;if(nativeEvent.oldState===_State.State.ACTIVE){_this.close();}});_defineProperty(_assertThisInitialized(_this),\"onHandlerStateChange\",function(ev){if(ev.nativeEvent.oldState===_State.State.ACTIVE){_this.handleRelease(ev);}});_defineProperty(_assertThisInitialized(_this),\"handleRelease\",function(ev){var _ev$nativeEvent=ev.nativeEvent,velocityX=_ev$nativeEvent.velocityX,dragX=_ev$nativeEvent.translationX;var _this$state=_this.state,_this$state$leftWidth=_this$state.leftWidth,leftWidth=_this$state$leftWidth===void 0?0:_this$state$leftWidth,_this$state$rowWidth=_this$state.rowWidth,rowWidth=_this$state$rowWidth===void 0?0:_this$state$rowWidth,rowState=_this$state.rowState;var _this$state$rightOffs=_this.state.rightOffset,rightOffset=_this$state$rightOffs===void 0?rowWidth:_this$state$rightOffs;var rightWidth=rowWidth-rightOffset;var _this$props11=_this.props,friction=_this$props11.friction,_this$props11$leftThr=_this$props11.leftThreshold,leftThreshold=_this$props11$leftThr===void 0?leftWidth/2:_this$props11$leftThr,_this$props11$rightTh=_this$props11.rightThreshold,rightThreshold=_this$props11$rightTh===void 0?rightWidth/2:_this$props11$rightTh;var startOffsetX=_this.currentOffset()+dragX/friction;var translationX=(dragX+DRAG_TOSS*velocityX)/friction;var toValue=0;if(rowState===0){if(translationX>leftThreshold){toValue=leftWidth;}else if(translationX<-rightThreshold){toValue=-rightWidth;}}else if(rowState===1){if(translationX>-leftThreshold){toValue=leftWidth;}}else{if(translationX<rightThreshold){toValue=-rightWidth;}}_this.animateRow(startOffsetX,toValue,velocityX/friction);});_defineProperty(_assertThisInitialized(_this),\"animateRow\",function(fromValue,toValue,velocityX){var _this$state2=_this.state,dragX=_this$state2.dragX,rowTranslation=_this$state2.rowTranslation;dragX.setValue(0);rowTranslation.setValue(fromValue);_this.setState({rowState:Math.sign(toValue)});_reactNative.Animated.spring(rowTranslation,_objectSpread({restSpeedThreshold:1.7,restDisplacementThreshold:0.4,velocity:velocityX,bounciness:0,toValue:toValue,useNativeDriver:_this.props.useNativeAnimations},_this.props.animationOptions)).start(function(_ref2){var finished=_ref2.finished;if(finished){if(toValue>0){var _this$props$onSwipeab,_this$props,_this$props$onSwipeab2,_this$props2;(_this$props$onSwipeab=(_this$props=_this.props).onSwipeableLeftOpen)===null||_this$props$onSwipeab===void 0?void 0:_this$props$onSwipeab.call(_this$props);(_this$props$onSwipeab2=(_this$props2=_this.props).onSwipeableOpen)===null||_this$props$onSwipeab2===void 0?void 0:_this$props$onSwipeab2.call(_this$props2,'left');}else if(toValue<0){var _this$props$onSwipeab3,_this$props3,_this$props$onSwipeab4,_this$props4;(_this$props$onSwipeab3=(_this$props3=_this.props).onSwipeableRightOpen)===null||_this$props$onSwipeab3===void 0?void 0:_this$props$onSwipeab3.call(_this$props3);(_this$props$onSwipeab4=(_this$props4=_this.props).onSwipeableOpen)===null||_this$props$onSwipeab4===void 0?void 0:_this$props$onSwipeab4.call(_this$props4,'right');}else{var _this$props$onSwipeab5,_this$props5;var closingDirection=fromValue>0?'left':'right';(_this$props$onSwipeab5=(_this$props5=_this.props).onSwipeableClose)===null||_this$props$onSwipeab5===void 0?void 0:_this$props$onSwipeab5.call(_this$props5,closingDirection);}}});if(toValue>0){var _this$props$onSwipeab6,_this$props6,_this$props$onSwipeab7,_this$props7;(_this$props$onSwipeab6=(_this$props6=_this.props).onSwipeableLeftWillOpen)===null||_this$props$onSwipeab6===void 0?void 0:_this$props$onSwipeab6.call(_this$props6);(_this$props$onSwipeab7=(_this$props7=_this.props).onSwipeableWillOpen)===null||_this$props$onSwipeab7===void 0?void 0:_this$props$onSwipeab7.call(_this$props7,'left');}else if(toValue<0){var _this$props$onSwipeab8,_this$props8,_this$props$onSwipeab9,_this$props9;(_this$props$onSwipeab8=(_this$props8=_this.props).onSwipeableRightWillOpen)===null||_this$props$onSwipeab8===void 0?void 0:_this$props$onSwipeab8.call(_this$props8);(_this$props$onSwipeab9=(_this$props9=_this.props).onSwipeableWillOpen)===null||_this$props$onSwipeab9===void 0?void 0:_this$props$onSwipeab9.call(_this$props9,'right');}else{var _this$props$onSwipeab10,_this$props10;var closingDirection=fromValue>0?'left':'right';(_this$props$onSwipeab10=(_this$props10=_this.props).onSwipeableWillClose)===null||_this$props$onSwipeab10===void 0?void 0:_this$props$onSwipeab10.call(_this$props10,closingDirection);}});_defineProperty(_assertThisInitialized(_this),\"onRowLayout\",function(_ref3){var nativeEvent=_ref3.nativeEvent;_this.setState({rowWidth:nativeEvent.layout.width});});_defineProperty(_assertThisInitialized(_this),\"currentOffset\",function(){var _this$state3=_this.state,_this$state3$leftWidt=_this$state3.leftWidth,leftWidth=_this$state3$leftWidt===void 0?0:_this$state3$leftWidt,_this$state3$rowWidth=_this$state3.rowWidth,rowWidth=_this$state3$rowWidth===void 0?0:_this$state3$rowWidth,rowState=_this$state3.rowState;var _this$state$rightOffs2=_this.state.rightOffset,rightOffset=_this$state$rightOffs2===void 0?rowWidth:_this$state$rightOffs2;var rightWidth=rowWidth-rightOffset;if(rowState===1){return leftWidth;}else if(rowState===-1){return-rightWidth;}return 0;});_defineProperty(_assertThisInitialized(_this),\"close\",function(){_this.animateRow(_this.currentOffset(),0);});_defineProperty(_assertThisInitialized(_this),\"openLeft\",function(){var _this$state$leftWidth2=_this.state.leftWidth,leftWidth=_this$state$leftWidth2===void 0?0:_this$state$leftWidth2;_this.animateRow(_this.currentOffset(),leftWidth);});_defineProperty(_assertThisInitialized(_this),\"openRight\",function(){var _this$state$rowWidth2=_this.state.rowWidth,rowWidth=_this$state$rowWidth2===void 0?0:_this$state$rowWidth2;var _this$state$rightOffs3=_this.state.rightOffset,rightOffset=_this$state$rightOffs3===void 0?rowWidth:_this$state$rightOffs3;var rightWidth=rowWidth-rightOffset;_this.animateRow(_this.currentOffset(),-rightWidth);});var _dragX=new _reactNative.Animated.Value(0);_this.state={dragX:_dragX,rowTranslation:new _reactNative.Animated.Value(0),rowState:0,leftWidth:undefined,rightOffset:undefined,rowWidth:undefined};_this.updateAnimatedEvent(_props,_this.state);_this.onGestureEvent=_reactNative.Animated.event([{nativeEvent:{translationX:_dragX}}],{useNativeDriver:_props.useNativeAnimations});return _this;}_createClass(Swipeable,[{key:\"UNSAFE_componentWillUpdate\",value:function UNSAFE_componentWillUpdate(props,state){if(this.props.friction!==props.friction||this.props.overshootLeft!==props.overshootLeft||this.props.overshootRight!==props.overshootRight||this.props.overshootFriction!==props.overshootFriction||this.state.leftWidth!==state.leftWidth||this.state.rightOffset!==state.rightOffset||this.state.rowWidth!==state.rowWidth){this.updateAnimatedEvent(props,state);}}},{key:\"render\",value:function render(){var _this2=this;var rowState=this.state.rowState;var _this$props12=this.props,children=_this$props12.children,renderLeftActions=_this$props12.renderLeftActions,renderRightActions=_this$props12.renderRightActions;var left=renderLeftActions&&React.createElement(_reactNative.Animated.View,{style:[styles.leftActions,{transform:[{translateX:this.leftActionTranslate}]}]},renderLeftActions(this.showLeftAction,this.transX),React.createElement(_reactNative.View,{onLayout:function onLayout(_ref4){var nativeEvent=_ref4.nativeEvent;return _this2.setState({leftWidth:nativeEvent.layout.x});}}));var right=renderRightActions&&React.createElement(_reactNative.Animated.View,{style:[styles.rightActions,{transform:[{translateX:this.rightActionTranslate}]}]},renderRightActions(this.showRightAction,this.transX),React.createElement(_reactNative.View,{onLayout:function onLayout(_ref5){var nativeEvent=_ref5.nativeEvent;return _this2.setState({rightOffset:nativeEvent.layout.x});}}));return React.createElement(_PanGestureHandler.PanGestureHandler,_extends({activeOffsetX:[-10,10]},this.props,{onGestureEvent:this.onGestureEvent,onHandlerStateChange:this.onHandlerStateChange}),React.createElement(_reactNative.Animated.View,{onLayout:this.onRowLayout,style:[styles.container,this.props.containerStyle]},left,right,React.createElement(_TapGestureHandler.TapGestureHandler,{enabled:rowState!==0,onHandlerStateChange:this.onTapHandlerStateChange},React.createElement(_reactNative.Animated.View,{pointerEvents:rowState===0?'auto':'box-only',style:[{transform:[{translateX:this.transX}]},this.props.childrenContainerStyle]},children))));}}]);return Swipeable;}(React.Component);exports.default=Swipeable;_defineProperty(Swipeable,\"defaultProps\",{friction:1,overshootFriction:1,useNativeAnimations:true});var styles=_reactNative.StyleSheet.create({container:{overflow:'hidden'},leftActions:_objectSpread(_objectSpread({},_reactNative.StyleSheet.absoluteFillObject),{},{flexDirection:_reactNative.I18nManager.isRTL?'row-reverse':'row'}),rightActions:_objectSpread(_objectSpread({},_reactNative.StyleSheet.absoluteFillObject),{},{flexDirection:_reactNative.I18nManager.isRTL?'row':'row-reverse'})});","map":{"version":3,"sources":["Swipeable.tsx"],"names":["DRAG_TOSS","Swipeable","Component","friction","overshootFriction","useNativeAnimations","constructor","props","dragX","Animated","Value","state","rowTranslation","rowState","leftWidth","undefined","rightOffset","rowWidth","updateAnimatedEvent","onGestureEvent","event","nativeEvent","translationX","useNativeDriver","UNSAFE_componentWillUpdate","overshootLeft","overshootRight","rightWidth","Math","max","transX","add","interpolate","inputRange","outputRange","showLeftAction","leftActionTranslate","Number","MIN_VALUE","extrapolate","showRightAction","rightActionTranslate","oldState","State","ACTIVE","close","ev","handleRelease","velocityX","leftThreshold","rightThreshold","startOffsetX","currentOffset","toValue","animateRow","fromValue","setValue","setState","sign","spring","restSpeedThreshold","restDisplacementThreshold","velocity","bounciness","animationOptions","start","finished","onSwipeableLeftOpen","onSwipeableOpen","onSwipeableRightOpen","closingDirection","onSwipeableClose","onSwipeableLeftWillOpen","onSwipeableWillOpen","onSwipeableRightWillOpen","onSwipeableWillClose","layout","width","render","children","renderLeftActions","renderRightActions","left","styles","leftActions","transform","translateX","x","right","rightActions","onHandlerStateChange","onRowLayout","container","containerStyle","onTapHandlerStateChange","childrenContainerStyle","create","overflow","StyleSheet","absoluteFillObject","flexDirection","I18nManager","isRTL"],"mappings":"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","sourcesContent":["// Similarily to the DrawerLayout component this deserves to be put in a\n// separate repo. Although, keeping it here for the time being will allow us to\n// move faster and fix possible issues quicker\n\nimport * as React from 'react';\nimport { Component } from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  View,\n  I18nManager,\n  LayoutChangeEvent,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\nimport {\n  GestureEvent,\n  HandlerStateChangeEvent,\n} from '../handlers/gestureHandlerCommon';\nimport {\n  PanGestureHandler,\n  PanGestureHandlerEventPayload,\n  PanGestureHandlerProps,\n} from '../handlers/PanGestureHandler';\nimport {\n  TapGestureHandler,\n  TapGestureHandlerEventPayload,\n} from '../handlers/TapGestureHandler';\nimport { State } from '../State';\n\nconst DRAG_TOSS = 0.05;\n\ntype SwipeableExcludes = Exclude<\n  keyof PanGestureHandlerProps,\n  'onGestureEvent' | 'onHandlerStateChange'\n>;\n\nexport interface SwipeableProps\n  extends Pick<PanGestureHandlerProps, SwipeableExcludes> {\n  /**\n   * Enables two-finger gestures on supported devices, for example iPads with\n   * trackpads. If not enabled the gesture will require click + drag, with\n   * `enableTrackpadTwoFingerGesture` swiping with two fingers will also trigger\n   * the gesture.\n   */\n  enableTrackpadTwoFingerGesture?: boolean;\n\n  /**\n   * Specifies how much the visual interaction will be delayed compared to the\n   * gesture distance. e.g. value of 1 will indicate that the swipeable panel\n   * should exactly follow the gesture, 2 means it is going to be two times\n   * \"slower\".\n   */\n  friction?: number;\n\n  /**\n   * Distance from the left edge at which released panel will animate to the\n   * open state (or the open panel will animate into the closed state). By\n   * default it's a half of the panel's width.\n   */\n  leftThreshold?: number;\n\n  /**\n   * Distance from the right edge at which released panel will animate to the\n   * open state (or the open panel will animate into the closed state). By\n   * default it's a half of the panel's width.\n   */\n  rightThreshold?: number;\n\n  /**\n   * Value indicating if the swipeable panel can be pulled further than the left\n   * actions panel's width. It is set to true by default as long as the left\n   * panel render method is present.\n   */\n  overshootLeft?: boolean;\n\n  /**\n   * Value indicating if the swipeable panel can be pulled further than the\n   * right actions panel's width. It is set to true by default as long as the\n   * right panel render method is present.\n   */\n  overshootRight?: boolean;\n\n  /**\n   * Specifies how much the visual interaction will be delayed compared to the\n   * gesture distance at overshoot. Default value is 1, it mean no friction, for\n   * a native feel, try 8 or above.\n   */\n  overshootFriction?: number;\n\n  /**\n   * @deprecated Use `direction` argument of onSwipeableOpen()\n   *\n   * Called when left action panel gets open.\n   */\n  onSwipeableLeftOpen?: () => void;\n\n  /**\n   * @deprecated Use `direction` argument of onSwipeableOpen()\n   *\n   * Called when right action panel gets open.\n   */\n  onSwipeableRightOpen?: () => void;\n\n  /**\n   * Called when action panel gets open (either right or left).\n   */\n  onSwipeableOpen?: (direction: 'left' | 'right') => void;\n\n  /**\n   * Called when action panel is closed.\n   */\n  onSwipeableClose?: (direction: 'left' | 'right') => void;\n\n  /**\n   * @deprecated Use `direction` argument of onSwipeableWillOpen()\n   *\n   * Called when left action panel starts animating on open.\n   */\n  onSwipeableLeftWillOpen?: () => void;\n\n  /**\n   * @deprecated Use `direction` argument of onSwipeableWillOpen()\n   *\n   * Called when right action panel starts animating on open.\n   */\n  onSwipeableRightWillOpen?: () => void;\n\n  /**\n   * Called when action panel starts animating on open (either right or left).\n   */\n  onSwipeableWillOpen?: (direction: 'left' | 'right') => void;\n\n  /**\n   * Called when action panel starts animating on close.\n   */\n  onSwipeableWillClose?: (direction: 'left' | 'right') => void;\n\n  /**\n   *\n   * This map describes the values to use as inputRange for extra interpolation:\n   * AnimatedValue: [startValue, endValue]\n   *\n   * progressAnimatedValue: [0, 1] dragAnimatedValue: [0, +]\n   *\n   * To support `rtl` flexbox layouts use `flexDirection` styling.\n   * */\n  renderLeftActions?: (\n    progressAnimatedValue: Animated.AnimatedInterpolation,\n    dragAnimatedValue: Animated.AnimatedInterpolation\n  ) => React.ReactNode;\n  /**\n   *\n   * This map describes the values to use as inputRange for extra interpolation:\n   * AnimatedValue: [startValue, endValue]\n   *\n   * progressAnimatedValue: [0, 1] dragAnimatedValue: [0, -]\n   *\n   * To support `rtl` flexbox layouts use `flexDirection` styling.\n   * */\n  renderRightActions?: (\n    progressAnimatedValue: Animated.AnimatedInterpolation,\n    dragAnimatedValue: Animated.AnimatedInterpolation\n  ) => React.ReactNode;\n\n  useNativeAnimations?: boolean;\n\n  animationOptions?: Record<string, unknown>;\n\n  /**\n   * Style object for the container (`Animated.View`), for example to override\n   * `overflow: 'hidden'`.\n   */\n  containerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * Style object for the children container (`Animated.View`), for example to\n   * apply `flex: 1`\n   */\n  childrenContainerStyle?: StyleProp<ViewStyle>;\n}\n\ntype SwipeableState = {\n  dragX: Animated.Value;\n  rowTranslation: Animated.Value;\n  rowState: number;\n  leftWidth?: number;\n  rightOffset?: number;\n  rowWidth?: number;\n};\n\nexport default class Swipeable extends Component<\n  SwipeableProps,\n  SwipeableState\n> {\n  static defaultProps = {\n    friction: 1,\n    overshootFriction: 1,\n    useNativeAnimations: true,\n  };\n\n  constructor(props: SwipeableProps) {\n    super(props);\n    const dragX = new Animated.Value(0);\n    this.state = {\n      dragX,\n      rowTranslation: new Animated.Value(0),\n      rowState: 0,\n      leftWidth: undefined,\n      rightOffset: undefined,\n      rowWidth: undefined,\n    };\n    this.updateAnimatedEvent(props, this.state);\n\n    this.onGestureEvent = Animated.event(\n      [{ nativeEvent: { translationX: dragX } }],\n      { useNativeDriver: props.useNativeAnimations! }\n    );\n  }\n\n  UNSAFE_componentWillUpdate(props: SwipeableProps, state: SwipeableState) {\n    if (\n      this.props.friction !== props.friction ||\n      this.props.overshootLeft !== props.overshootLeft ||\n      this.props.overshootRight !== props.overshootRight ||\n      this.props.overshootFriction !== props.overshootFriction ||\n      this.state.leftWidth !== state.leftWidth ||\n      this.state.rightOffset !== state.rightOffset ||\n      this.state.rowWidth !== state.rowWidth\n    ) {\n      this.updateAnimatedEvent(props, state);\n    }\n  }\n\n  private onGestureEvent?: (\n    event: GestureEvent<PanGestureHandlerEventPayload>\n  ) => void;\n  private transX?: Animated.AnimatedInterpolation;\n  private showLeftAction?: Animated.AnimatedInterpolation | Animated.Value;\n  private leftActionTranslate?: Animated.AnimatedInterpolation;\n  private showRightAction?: Animated.AnimatedInterpolation | Animated.Value;\n  private rightActionTranslate?: Animated.AnimatedInterpolation;\n\n  private updateAnimatedEvent = (\n    props: SwipeableProps,\n    state: SwipeableState\n  ) => {\n    const { friction, overshootFriction } = props;\n    const { dragX, rowTranslation, leftWidth = 0, rowWidth = 0 } = state;\n    const { rightOffset = rowWidth } = state;\n    const rightWidth = Math.max(0, rowWidth - rightOffset);\n\n    const {\n      overshootLeft = leftWidth > 0,\n      overshootRight = rightWidth > 0,\n    } = props;\n\n    const transX = Animated.add(\n      rowTranslation,\n      dragX.interpolate({\n        inputRange: [0, friction!],\n        outputRange: [0, 1],\n      })\n    ).interpolate({\n      inputRange: [-rightWidth - 1, -rightWidth, leftWidth, leftWidth + 1],\n      outputRange: [\n        -rightWidth - (overshootRight ? 1 / overshootFriction! : 0),\n        -rightWidth,\n        leftWidth,\n        leftWidth + (overshootLeft ? 1 / overshootFriction! : 0),\n      ],\n    });\n    this.transX = transX;\n    this.showLeftAction =\n      leftWidth > 0\n        ? transX.interpolate({\n            inputRange: [-1, 0, leftWidth],\n            outputRange: [0, 0, 1],\n          })\n        : new Animated.Value(0);\n    this.leftActionTranslate = this.showLeftAction.interpolate({\n      inputRange: [0, Number.MIN_VALUE],\n      outputRange: [-10000, 0],\n      extrapolate: 'clamp',\n    });\n    this.showRightAction =\n      rightWidth > 0\n        ? transX.interpolate({\n            inputRange: [-rightWidth, 0, 1],\n            outputRange: [1, 0, 0],\n          })\n        : new Animated.Value(0);\n    this.rightActionTranslate = this.showRightAction.interpolate({\n      inputRange: [0, Number.MIN_VALUE],\n      outputRange: [-10000, 0],\n      extrapolate: 'clamp',\n    });\n  };\n\n  private onTapHandlerStateChange = ({\n    nativeEvent,\n  }: HandlerStateChangeEvent<TapGestureHandlerEventPayload>) => {\n    if (nativeEvent.oldState === State.ACTIVE) {\n      this.close();\n    }\n  };\n\n  private onHandlerStateChange = (\n    ev: HandlerStateChangeEvent<PanGestureHandlerEventPayload>\n  ) => {\n    if (ev.nativeEvent.oldState === State.ACTIVE) {\n      this.handleRelease(ev);\n    }\n  };\n\n  private handleRelease = (\n    ev: HandlerStateChangeEvent<PanGestureHandlerEventPayload>\n  ) => {\n    const { velocityX, translationX: dragX } = ev.nativeEvent;\n    const { leftWidth = 0, rowWidth = 0, rowState } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    const {\n      friction,\n      leftThreshold = leftWidth / 2,\n      rightThreshold = rightWidth / 2,\n    } = this.props;\n\n    const startOffsetX = this.currentOffset() + dragX / friction!;\n    const translationX = (dragX + DRAG_TOSS * velocityX) / friction!;\n\n    let toValue = 0;\n    if (rowState === 0) {\n      if (translationX > leftThreshold) {\n        toValue = leftWidth;\n      } else if (translationX < -rightThreshold) {\n        toValue = -rightWidth;\n      }\n    } else if (rowState === 1) {\n      // swiped to left\n      if (translationX > -leftThreshold) {\n        toValue = leftWidth;\n      }\n    } else {\n      // swiped to right\n      if (translationX < rightThreshold) {\n        toValue = -rightWidth;\n      }\n    }\n\n    this.animateRow(startOffsetX, toValue, velocityX / friction!);\n  };\n\n  private animateRow = (\n    fromValue: number,\n    toValue: number,\n    velocityX?:\n      | number\n      | {\n          x: number;\n          y: number;\n        }\n  ) => {\n    const { dragX, rowTranslation } = this.state;\n    dragX.setValue(0);\n    rowTranslation.setValue(fromValue);\n\n    this.setState({ rowState: Math.sign(toValue) });\n    Animated.spring(rowTranslation, {\n      restSpeedThreshold: 1.7,\n      restDisplacementThreshold: 0.4,\n      velocity: velocityX,\n      bounciness: 0,\n      toValue,\n      useNativeDriver: this.props.useNativeAnimations!,\n      ...this.props.animationOptions,\n    }).start(({ finished }) => {\n      if (finished) {\n        if (toValue > 0) {\n          this.props.onSwipeableLeftOpen?.();\n          this.props.onSwipeableOpen?.('left');\n        } else if (toValue < 0) {\n          this.props.onSwipeableRightOpen?.();\n          this.props.onSwipeableOpen?.('right');\n        } else {\n          const closingDirection = fromValue > 0 ? 'left' : 'right';\n          this.props.onSwipeableClose?.(closingDirection);\n        }\n      }\n    });\n    if (toValue > 0) {\n      this.props.onSwipeableLeftWillOpen?.();\n      this.props.onSwipeableWillOpen?.('left');\n    } else if (toValue < 0) {\n      this.props.onSwipeableRightWillOpen?.();\n      this.props.onSwipeableWillOpen?.('right');\n    } else {\n      const closingDirection = fromValue > 0 ? 'left' : 'right';\n      this.props.onSwipeableWillClose?.(closingDirection);\n    }\n  };\n\n  private onRowLayout = ({ nativeEvent }: LayoutChangeEvent) => {\n    this.setState({ rowWidth: nativeEvent.layout.width });\n  };\n\n  private currentOffset = () => {\n    const { leftWidth = 0, rowWidth = 0, rowState } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    if (rowState === 1) {\n      return leftWidth;\n    } else if (rowState === -1) {\n      return -rightWidth;\n    }\n    return 0;\n  };\n\n  close = () => {\n    this.animateRow(this.currentOffset(), 0);\n  };\n\n  openLeft = () => {\n    const { leftWidth = 0 } = this.state;\n    this.animateRow(this.currentOffset(), leftWidth);\n  };\n\n  openRight = () => {\n    const { rowWidth = 0 } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    this.animateRow(this.currentOffset(), -rightWidth);\n  };\n\n  render() {\n    const { rowState } = this.state;\n    const { children, renderLeftActions, renderRightActions } = this.props;\n\n    const left = renderLeftActions && (\n      <Animated.View\n        style={[\n          styles.leftActions,\n          // all those and below parameters can have ! since they are all\n          // asigned in constructor in `updateAnimatedEvent` but TS cannot spot\n          // it for some reason\n          { transform: [{ translateX: this.leftActionTranslate! }] },\n        ]}>\n        {renderLeftActions(this.showLeftAction!, this.transX!)}\n        <View\n          onLayout={({ nativeEvent }) =>\n            this.setState({ leftWidth: nativeEvent.layout.x })\n          }\n        />\n      </Animated.View>\n    );\n\n    const right = renderRightActions && (\n      <Animated.View\n        style={[\n          styles.rightActions,\n          { transform: [{ translateX: this.rightActionTranslate! }] },\n        ]}>\n        {renderRightActions(this.showRightAction!, this.transX!)}\n        <View\n          onLayout={({ nativeEvent }) =>\n            this.setState({ rightOffset: nativeEvent.layout.x })\n          }\n        />\n      </Animated.View>\n    );\n\n    return (\n      <PanGestureHandler\n        activeOffsetX={[-10, 10]}\n        {...this.props}\n        onGestureEvent={this.onGestureEvent}\n        onHandlerStateChange={this.onHandlerStateChange}>\n        <Animated.View\n          onLayout={this.onRowLayout}\n          style={[styles.container, this.props.containerStyle]}>\n          {left}\n          {right}\n          <TapGestureHandler\n            enabled={rowState !== 0}\n            onHandlerStateChange={this.onTapHandlerStateChange}>\n            <Animated.View\n              pointerEvents={rowState === 0 ? 'auto' : 'box-only'}\n              style={[\n                {\n                  transform: [{ translateX: this.transX! }],\n                },\n                this.props.childrenContainerStyle,\n              ]}>\n              {children}\n            </Animated.View>\n          </TapGestureHandler>\n        </Animated.View>\n      </PanGestureHandler>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n  leftActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: I18nManager.isRTL ? 'row-reverse' : 'row',\n  },\n  rightActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: I18nManager.isRTL ? 'row' : 'row-reverse',\n  },\n});\n"]},"metadata":{},"sourceType":"script"}