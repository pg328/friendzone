{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import invariant from'invariant';import{val}from\"../val\";import AnimatedNode from\"./AnimatedNode\";import InternalAnimatedValue from\"./InternalAnimatedValue\";var AnimatedBlock=function(_AnimatedNode){_inherits(AnimatedBlock,_AnimatedNode);var _super=_createSuper(AnimatedBlock);function AnimatedBlock(array){var _this;_classCallCheck(this,AnimatedBlock);invariant(array.every(function(el){return el instanceof AnimatedNode;}),\"Reanimated: Animated.block node argument should be an array with elements of type AnimatedNode. One or more of them are not AnimatedNodes\");_this=_super.call(this,{type:'block',block:array},array);_this._array=array;return _this;}_createClass(AnimatedBlock,[{key:\"toString\",value:function toString(){return\"AnimatedBlock, id: \"+this.__nodeID;}},{key:\"__onEvaluate\",value:function __onEvaluate(){var result;this._array.forEach(function(node){result=val(node);});return result;}}]);return AnimatedBlock;}(AnimatedNode);export function createAnimatedBlock(items){return adapt(items);}function nodify(v){if(typeof v==='object'&&v!=null&&v.__isProxy){if(!v.__val){v.__val=new InternalAnimatedValue(0);}return v.__val;}return v instanceof AnimatedNode?v:InternalAnimatedValue.valueForConstant(v);}export function adapt(v){return Array.isArray(v)?new AnimatedBlock(v.map(function(node){return adapt(node);})):nodify(v);}","map":{"version":3,"names":["invariant","val","AnimatedNode","InternalAnimatedValue","AnimatedBlock","array","every","el","type","block","_array","__nodeID","result","forEach","node","createAnimatedBlock","items","adapt","nodify","v","__isProxy","__val","valueForConstant","Array","isArray","map"],"sources":["/Users/pg328/Projects/friendzone/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedBlock.js"],"sourcesContent":["import invariant from 'invariant';\nimport { val } from '../val';\nimport AnimatedNode from './AnimatedNode';\nimport InternalAnimatedValue from './InternalAnimatedValue';\n\nclass AnimatedBlock extends AnimatedNode {\n  _array;\n\n  constructor(array) {\n    invariant(\n      array.every((el) => el instanceof AnimatedNode),\n      `Reanimated: Animated.block node argument should be an array with elements of type AnimatedNode. One or more of them are not AnimatedNodes`\n    );\n    super({ type: 'block', block: array }, array);\n    this._array = array;\n  }\n\n  toString() {\n    return `AnimatedBlock, id: ${this.__nodeID}`;\n  }\n\n  __onEvaluate() {\n    let result;\n    this._array.forEach((node) => {\n      result = val(node);\n    });\n    return result;\n  }\n}\n\nexport function createAnimatedBlock(items) {\n  return adapt(items);\n}\n\nfunction nodify(v) {\n  if (typeof v === 'object' && v?.__isProxy) {\n    if (!v.__val) {\n      v.__val = new InternalAnimatedValue(0);\n    }\n    return v.__val;\n  }\n  // TODO: cache some typical static values (e.g. 0, 1, -1)\n  return v instanceof AnimatedNode\n    ? v\n    : InternalAnimatedValue.valueForConstant(v);\n}\n\nexport function adapt(v) {\n  return Array.isArray(v)\n    ? new AnimatedBlock(v.map((node) => adapt(node)))\n    : nodify(v);\n}\n"],"mappings":"qgCAAA,MAAOA,UAAS,KAAM,WAAW,CACjC,OAASC,GAAG,cACZ,MAAOC,aAAY,sBACnB,MAAOC,sBAAqB,+BAAgC,GAEtDC,cAAa,uGAGjB,uBAAYC,KAAK,CAAE,+CACjBL,SAAS,CACPK,KAAK,CAACC,KAAK,CAAC,SAACC,EAAE,QAAKA,GAAE,WAAYL,aAAY,GAAC,6IAEhD,CACD,uBAAM,CAAEM,IAAI,CAAE,OAAO,CAAEC,KAAK,CAAEJ,KAAM,CAAC,CAAEA,KAAK,EAC5C,MAAKK,MAAM,CAAGL,KAAK,CAAC,aACtB,CAAC,kDAED,mBAAW,CACT,4BAA6B,IAAI,CAACM,QAAQ,CAC5C,CAAC,4BAED,uBAAe,CACb,GAAIC,OAAM,CACV,IAAI,CAACF,MAAM,CAACG,OAAO,CAAC,SAACC,IAAI,CAAK,CAC5BF,MAAM,CAAGX,GAAG,CAACa,IAAI,CAAC,CACpB,CAAC,CAAC,CACF,MAAOF,OAAM,CACf,CAAC,2BAtByBV,YAAY,EAyBxC,MAAO,SAASa,oBAAmB,CAACC,KAAK,CAAE,CACzC,MAAOC,MAAK,CAACD,KAAK,CAAC,CACrB,CAEA,QAASE,OAAM,CAACC,CAAC,CAAE,CACjB,GAAI,MAAOA,EAAC,GAAK,QAAQ,EAAIA,CAAC,QAADA,CAAC,CAAEC,SAAS,CAAE,CACzC,GAAI,CAACD,CAAC,CAACE,KAAK,CAAE,CACZF,CAAC,CAACE,KAAK,CAAG,GAAIlB,sBAAqB,CAAC,CAAC,CAAC,CACxC,CACA,MAAOgB,EAAC,CAACE,KAAK,CAChB,CAEA,MAAOF,EAAC,WAAYjB,aAAY,CAC5BiB,CAAC,CACDhB,qBAAqB,CAACmB,gBAAgB,CAACH,CAAC,CAAC,CAC/C,CAEA,MAAO,SAASF,MAAK,CAACE,CAAC,CAAE,CACvB,MAAOI,MAAK,CAACC,OAAO,CAACL,CAAC,CAAC,CACnB,GAAIf,cAAa,CAACe,CAAC,CAACM,GAAG,CAAC,SAACX,IAAI,QAAKG,MAAK,CAACH,IAAI,CAAC,GAAC,CAAC,CAC/CI,MAAM,CAACC,CAAC,CAAC,CACf"},"metadata":{},"sourceType":"module"}