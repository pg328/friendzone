{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import AnimatedNode from\"./AnimatedNode\";import{val}from\"../val\";import invariant from'invariant';import{adapt}from\"../core/AnimatedBlock\";function reduce(fn){return function(input){return input.reduce(function(a,b){return fn(val(a),val(b));});};}function reduceFrom(fn,initialValue){return function(input){return input.reduce(function(a,b){return fn(val(a),val(b));},initialValue);};}function infix(fn){return function(input){return fn(val(input[0]),val(input[1]));};}function single(fn){return function(input){return fn(val(input[0]));};}var OPERATIONS={add:reduce(function(a,b){return a+b;}),sub:reduce(function(a,b){return a-b;}),multiply:reduce(function(a,b){return a*b;}),divide:reduce(function(a,b){return a/b;}),pow:reduce(function(a,b){return Math.pow(a,b);}),modulo:reduce(function(a,b){return(a%b+b)%b;}),sqrt:single(function(a){return Math.sqrt(a);}),log:single(function(a){return Math.log(a);}),sin:single(function(a){return Math.sin(a);}),cos:single(function(a){return Math.cos(a);}),tan:single(function(a){return Math.tan(a);}),acos:single(function(a){return Math.acos(a);}),asin:single(function(a){return Math.asin(a);}),atan:single(function(a){return Math.atan(a);}),exp:single(function(a){return Math.exp(a);}),round:single(function(a){return Math.round(a);}),abs:single(function(a){return Math.abs(a);}),ceil:single(function(a){return Math.ceil(a);}),floor:single(function(a){return Math.floor(a);}),max:reduce(function(a,b){return Math.max(a,b);}),min:reduce(function(a,b){return Math.min(a,b);}),and:reduceFrom(function(a,b){return a&&b;},true),or:reduceFrom(function(a,b){return a||b;},false),not:single(function(a){return!a;}),defined:single(function(a){return a!==null&&a!==undefined&&!isNaN(a);}),lessThan:infix(function(a,b){return a<b;}),eq:infix(function(a,b){return a==b;}),greaterThan:infix(function(a,b){return a>b;}),lessOrEq:infix(function(a,b){return a<=b;}),greaterOrEq:infix(function(a,b){return a>=b;}),neq:infix(function(a,b){return a!=b;})};var AnimatedOperator=function(_AnimatedNode){_inherits(AnimatedOperator,_AnimatedNode);var _super=_createSuper(AnimatedOperator);function AnimatedOperator(operator,input){var _this;_classCallCheck(this,AnimatedOperator);invariant(typeof operator==='string',\"Reanimated: Animated.operator node first argument should be of type String, but got: \"+operator);invariant(input.every(function(el){return el instanceof AnimatedNode||typeof el==='string'||typeof el==='number';}),\"Reanimated: Animated.operator node second argument should be one or more of type AnimatedNode, String or Number but got \"+input);_this=_super.call(this,{type:'op',op:operator,input:input},input);_this._op=operator;_this._input=input;return _this;}_createClass(AnimatedOperator,[{key:\"toString\",value:function toString(){return\"AnimatedOperator, id: \"+this.__nodeID;}},{key:\"__onEvaluate\",value:function __onEvaluate(){if(!this._operation){this._operation=OPERATIONS[this._op];invariant(this._operation,\"Illegal operator '%s'\",this._op);}return this._operation(this._input);}}]);return AnimatedOperator;}(AnimatedNode);export function createAnimatedOperator(name){return function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return new AnimatedOperator(name,args.map(adapt));};}","map":{"version":3,"names":["AnimatedNode","val","invariant","adapt","reduce","fn","input","a","b","reduceFrom","initialValue","infix","single","OPERATIONS","add","sub","multiply","divide","pow","Math","modulo","sqrt","log","sin","cos","tan","acos","asin","atan","exp","round","abs","ceil","floor","max","min","and","or","not","defined","undefined","isNaN","lessThan","eq","greaterThan","lessOrEq","greaterOrEq","neq","AnimatedOperator","operator","every","el","type","op","_op","_input","__nodeID","_operation","createAnimatedOperator","name","args","map"],"sources":["/Users/pg328/Projects/friendzone/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedOperator.js"],"sourcesContent":["import AnimatedNode from './AnimatedNode';\nimport { val } from '../val';\n\nimport invariant from 'invariant';\nimport { adapt } from '../core/AnimatedBlock';\n\nfunction reduce(fn) {\n  return (input) => input.reduce((a, b) => fn(val(a), val(b)));\n}\n\nfunction reduceFrom(fn, initialValue) {\n  return (input) => input.reduce((a, b) => fn(val(a), val(b)), initialValue);\n}\n\nfunction infix(fn) {\n  return (input) => fn(val(input[0]), val(input[1]));\n}\n\nfunction single(fn) {\n  return (input) => fn(val(input[0]));\n}\n\nconst OPERATIONS = {\n  // arithmetic\n  add: reduce((a, b) => a + b),\n  sub: reduce((a, b) => a - b),\n  multiply: reduce((a, b) => a * b),\n  divide: reduce((a, b) => a / b),\n  pow: reduce((a, b) => Math.pow(a, b)),\n  modulo: reduce((a, b) => ((a % b) + b) % b),\n  sqrt: single((a) => Math.sqrt(a)),\n  log: single((a) => Math.log(a)),\n  sin: single((a) => Math.sin(a)),\n  cos: single((a) => Math.cos(a)),\n  tan: single((a) => Math.tan(a)),\n  acos: single((a) => Math.acos(a)),\n  asin: single((a) => Math.asin(a)),\n  atan: single((a) => Math.atan(a)),\n  exp: single((a) => Math.exp(a)),\n  round: single((a) => Math.round(a)),\n  abs: single((a) => Math.abs(a)),\n  ceil: single((a) => Math.ceil(a)),\n  floor: single((a) => Math.floor(a)),\n  max: reduce((a, b) => Math.max(a, b)),\n  min: reduce((a, b) => Math.min(a, b)),\n\n  // logical\n  and: reduceFrom((a, b) => a && b, true),\n  or: reduceFrom((a, b) => a || b, false),\n  not: single((a) => !a),\n  defined: single((a) => a !== null && a !== undefined && !isNaN(a)),\n\n  // comparing\n  lessThan: infix((a, b) => a < b),\n  /* eslint-disable-next-line eqeqeq */\n  eq: infix((a, b) => a == b),\n  greaterThan: infix((a, b) => a > b),\n  lessOrEq: infix((a, b) => a <= b),\n  greaterOrEq: infix((a, b) => a >= b),\n  /* eslint-disable-next-line eqeqeq */\n  neq: infix((a, b) => a != b),\n};\n\nclass AnimatedOperator extends AnimatedNode {\n  _input;\n  _op;\n  _operation;\n\n  constructor(operator, input) {\n    invariant(\n      typeof operator === 'string',\n      `Reanimated: Animated.operator node first argument should be of type String, but got: ${operator}`\n    );\n    invariant(\n      input.every(\n        (el) =>\n          el instanceof AnimatedNode ||\n          typeof el === 'string' ||\n          typeof el === 'number'\n      ),\n      `Reanimated: Animated.operator node second argument should be one or more of type AnimatedNode, String or Number but got ${input}`\n    );\n    super({ type: 'op', op: operator, input }, input);\n    this._op = operator;\n    this._input = input;\n  }\n\n  toString() {\n    return `AnimatedOperator, id: ${this.__nodeID}`;\n  }\n\n  __onEvaluate() {\n    if (!this._operation) {\n      this._operation = OPERATIONS[this._op];\n      invariant(this._operation, `Illegal operator '%s'`, this._op);\n    }\n    return this._operation(this._input);\n  }\n}\n\nexport function createAnimatedOperator(name) {\n  return (...args) => new AnimatedOperator(name, args.map(adapt));\n}\n"],"mappings":"qgCAAA,MAAOA,aAAY,sBACnB,OAASC,GAAG,cAEZ,MAAOC,UAAS,KAAM,WAAW,CACjC,OAASC,KAAK,6BAEd,QAASC,OAAM,CAACC,EAAE,CAAE,CAClB,MAAO,UAACC,KAAK,QAAKA,MAAK,CAACF,MAAM,CAAC,SAACG,CAAC,CAAEC,CAAC,QAAKH,GAAE,CAACJ,GAAG,CAACM,CAAC,CAAC,CAAEN,GAAG,CAACO,CAAC,CAAC,CAAC,GAAC,GAC9D,CAEA,QAASC,WAAU,CAACJ,EAAE,CAAEK,YAAY,CAAE,CACpC,MAAO,UAACJ,KAAK,QAAKA,MAAK,CAACF,MAAM,CAAC,SAACG,CAAC,CAAEC,CAAC,QAAKH,GAAE,CAACJ,GAAG,CAACM,CAAC,CAAC,CAAEN,GAAG,CAACO,CAAC,CAAC,CAAC,GAAEE,YAAY,CAAC,GAC5E,CAEA,QAASC,MAAK,CAACN,EAAE,CAAE,CACjB,MAAO,UAACC,KAAK,QAAKD,GAAE,CAACJ,GAAG,CAACK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAEL,GAAG,CAACK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GACpD,CAEA,QAASM,OAAM,CAACP,EAAE,CAAE,CAClB,MAAO,UAACC,KAAK,QAAKD,GAAE,CAACJ,GAAG,CAACK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GACrC,CAEA,GAAMO,WAAU,CAAG,CAEjBC,GAAG,CAAEV,MAAM,CAAC,SAACG,CAAC,CAAEC,CAAC,QAAKD,EAAC,CAAGC,CAAC,GAAC,CAC5BO,GAAG,CAAEX,MAAM,CAAC,SAACG,CAAC,CAAEC,CAAC,QAAKD,EAAC,CAAGC,CAAC,GAAC,CAC5BQ,QAAQ,CAAEZ,MAAM,CAAC,SAACG,CAAC,CAAEC,CAAC,QAAKD,EAAC,CAAGC,CAAC,GAAC,CACjCS,MAAM,CAAEb,MAAM,CAAC,SAACG,CAAC,CAAEC,CAAC,QAAKD,EAAC,CAAGC,CAAC,GAAC,CAC/BU,GAAG,CAAEd,MAAM,CAAC,SAACG,CAAC,CAAEC,CAAC,QAAKW,KAAI,CAACD,GAAG,CAACX,CAAC,CAAEC,CAAC,CAAC,GAAC,CACrCY,MAAM,CAAEhB,MAAM,CAAC,SAACG,CAAC,CAAEC,CAAC,QAAK,CAAED,CAAC,CAAGC,CAAC,CAAIA,CAAC,EAAIA,CAAC,GAAC,CAC3Ca,IAAI,CAAET,MAAM,CAAC,SAACL,CAAC,QAAKY,KAAI,CAACE,IAAI,CAACd,CAAC,CAAC,GAAC,CACjCe,GAAG,CAAEV,MAAM,CAAC,SAACL,CAAC,QAAKY,KAAI,CAACG,GAAG,CAACf,CAAC,CAAC,GAAC,CAC/BgB,GAAG,CAAEX,MAAM,CAAC,SAACL,CAAC,QAAKY,KAAI,CAACI,GAAG,CAAChB,CAAC,CAAC,GAAC,CAC/BiB,GAAG,CAAEZ,MAAM,CAAC,SAACL,CAAC,QAAKY,KAAI,CAACK,GAAG,CAACjB,CAAC,CAAC,GAAC,CAC/BkB,GAAG,CAAEb,MAAM,CAAC,SAACL,CAAC,QAAKY,KAAI,CAACM,GAAG,CAAClB,CAAC,CAAC,GAAC,CAC/BmB,IAAI,CAAEd,MAAM,CAAC,SAACL,CAAC,QAAKY,KAAI,CAACO,IAAI,CAACnB,CAAC,CAAC,GAAC,CACjCoB,IAAI,CAAEf,MAAM,CAAC,SAACL,CAAC,QAAKY,KAAI,CAACQ,IAAI,CAACpB,CAAC,CAAC,GAAC,CACjCqB,IAAI,CAAEhB,MAAM,CAAC,SAACL,CAAC,QAAKY,KAAI,CAACS,IAAI,CAACrB,CAAC,CAAC,GAAC,CACjCsB,GAAG,CAAEjB,MAAM,CAAC,SAACL,CAAC,QAAKY,KAAI,CAACU,GAAG,CAACtB,CAAC,CAAC,GAAC,CAC/BuB,KAAK,CAAElB,MAAM,CAAC,SAACL,CAAC,QAAKY,KAAI,CAACW,KAAK,CAACvB,CAAC,CAAC,GAAC,CACnCwB,GAAG,CAAEnB,MAAM,CAAC,SAACL,CAAC,QAAKY,KAAI,CAACY,GAAG,CAACxB,CAAC,CAAC,GAAC,CAC/ByB,IAAI,CAAEpB,MAAM,CAAC,SAACL,CAAC,QAAKY,KAAI,CAACa,IAAI,CAACzB,CAAC,CAAC,GAAC,CACjC0B,KAAK,CAAErB,MAAM,CAAC,SAACL,CAAC,QAAKY,KAAI,CAACc,KAAK,CAAC1B,CAAC,CAAC,GAAC,CACnC2B,GAAG,CAAE9B,MAAM,CAAC,SAACG,CAAC,CAAEC,CAAC,QAAKW,KAAI,CAACe,GAAG,CAAC3B,CAAC,CAAEC,CAAC,CAAC,GAAC,CACrC2B,GAAG,CAAE/B,MAAM,CAAC,SAACG,CAAC,CAAEC,CAAC,QAAKW,KAAI,CAACgB,GAAG,CAAC5B,CAAC,CAAEC,CAAC,CAAC,GAAC,CAGrC4B,GAAG,CAAE3B,UAAU,CAAC,SAACF,CAAC,CAAEC,CAAC,QAAKD,EAAC,EAAIC,CAAC,GAAE,IAAI,CAAC,CACvC6B,EAAE,CAAE5B,UAAU,CAAC,SAACF,CAAC,CAAEC,CAAC,QAAKD,EAAC,EAAIC,CAAC,GAAE,KAAK,CAAC,CACvC8B,GAAG,CAAE1B,MAAM,CAAC,SAACL,CAAC,QAAK,CAACA,CAAC,GAAC,CACtBgC,OAAO,CAAE3B,MAAM,CAAC,SAACL,CAAC,QAAKA,EAAC,GAAK,IAAI,EAAIA,CAAC,GAAKiC,SAAS,EAAI,CAACC,KAAK,CAAClC,CAAC,CAAC,GAAC,CAGlEmC,QAAQ,CAAE/B,KAAK,CAAC,SAACJ,CAAC,CAAEC,CAAC,QAAKD,EAAC,CAAGC,CAAC,GAAC,CAEhCmC,EAAE,CAAEhC,KAAK,CAAC,SAACJ,CAAC,CAAEC,CAAC,QAAKD,EAAC,EAAIC,CAAC,GAAC,CAC3BoC,WAAW,CAAEjC,KAAK,CAAC,SAACJ,CAAC,CAAEC,CAAC,QAAKD,EAAC,CAAGC,CAAC,GAAC,CACnCqC,QAAQ,CAAElC,KAAK,CAAC,SAACJ,CAAC,CAAEC,CAAC,QAAKD,EAAC,EAAIC,CAAC,GAAC,CACjCsC,WAAW,CAAEnC,KAAK,CAAC,SAACJ,CAAC,CAAEC,CAAC,QAAKD,EAAC,EAAIC,CAAC,GAAC,CAEpCuC,GAAG,CAAEpC,KAAK,CAAC,SAACJ,CAAC,CAAEC,CAAC,QAAKD,EAAC,EAAIC,CAAC,GAC7B,CAAC,CAAC,GAEIwC,iBAAgB,6GAKpB,0BAAYC,QAAQ,CAAE3C,KAAK,CAAE,kDAC3BJ,SAAS,CACP,MAAO+C,SAAQ,GAAK,QAAQ,yFAC4DA,QAAQ,CACjG,CACD/C,SAAS,CACPI,KAAK,CAAC4C,KAAK,CACT,SAACC,EAAE,QACDA,GAAE,WAAYnD,aAAY,EAC1B,MAAOmD,GAAE,GAAK,QAAQ,EACtB,MAAOA,GAAE,GAAK,QAAQ,GACzB,4HAC0H7C,KAAK,CACjI,CACD,uBAAM,CAAE8C,IAAI,CAAE,IAAI,CAAEC,EAAE,CAAEJ,QAAQ,CAAE3C,KAAK,CAALA,KAAM,CAAC,CAAEA,KAAK,EAChD,MAAKgD,GAAG,CAAGL,QAAQ,CACnB,MAAKM,MAAM,CAAGjD,KAAK,CAAC,aACtB,CAAC,qDAED,mBAAW,CACT,+BAAgC,IAAI,CAACkD,QAAQ,CAC/C,CAAC,4BAED,uBAAe,CACb,GAAI,CAAC,IAAI,CAACC,UAAU,CAAE,CACpB,IAAI,CAACA,UAAU,CAAG5C,UAAU,CAAC,IAAI,CAACyC,GAAG,CAAC,CACtCpD,SAAS,CAAC,IAAI,CAACuD,UAAU,yBAA2B,IAAI,CAACH,GAAG,CAAC,CAC/D,CACA,MAAO,KAAI,CAACG,UAAU,CAAC,IAAI,CAACF,MAAM,CAAC,CACrC,CAAC,8BAlC4BvD,YAAY,EAqC3C,MAAO,SAAS0D,uBAAsB,CAACC,IAAI,CAAE,CAC3C,MAAO,0CAAIC,IAAI,0CAAJA,IAAI,8BAAK,IAAIZ,iBAAgB,CAACW,IAAI,CAAEC,IAAI,CAACC,GAAG,CAAC1D,KAAK,CAAC,CAAC,GACjE"},"metadata":{},"sourceType":"module"}